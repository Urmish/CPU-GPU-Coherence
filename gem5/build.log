scons: Reading SConscript files ...
Checking for leading underscore in global variables...(cached) no
Checking for C header file Python.h... (cached) yes
Checking for C library pthread... (cached) yes
Checking for C library dl... (cached) yes
Checking for C library util... (cached) yes
Checking for C library m... (cached) yes
Checking for C library python2.7... (cached) yes
Checking for accept(0,0,0) in C++ library None... (cached) yes
Checking for zlibVersion() in C++ library z... (cached) yes
Checking for GOOGLE_PROTOBUF_VERIFY_VERSION in C++ library protobuf... (cached) yes
Checking for clock_nanosleep(0,0,NULL,NULL) in C library None... (cached) no
Checking for clock_nanosleep(0,0,NULL,NULL) in C library rt... (cached) yes
Checking for timer_create(CLOCK_MONOTONIC, NULL, NULL) in C library None... (cached) yes
Checking for C library tcmalloc... (cached) yes
Checking for C header file fenv.h... (cached) yes
Checking for C header file linux/kvm.h... (cached) yes
Checking size of struct kvm_xsave ... (cached) yes
Checking for member exclude_host in struct perf_event_attr...(cached) yes
Building in /users/uthakker/gem5-gpu_3/CPU-GPU-Coherence/gem5/build/X86_VI_hammer_GPU
Using saved variables file /users/uthakker/gem5-gpu_3/CPU-GPU-Coherence/gem5/build/variables/X86_VI_hammer_GPU
DeclListAST generate
[TypeDecl: int]
DeclListAST generate
[TypeDecl: bool]
DeclListAST generate
[TypeDecl: std::string]
DeclListAST generate
[TypeDecl: uint32_t]
DeclListAST generate
[TypeDecl: uint64]
DeclListAST generate
[TypeDecl: PacketPtr]
DeclListAST generate
[TypeDecl: Packet]
DeclListAST generate
[TypeDecl: Address]
DeclListAST generate
[TypeDecl: Cycles]
DeclListAST generate
[TypeDecl: DataBlock]
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
DataBlock
TypeAST.py -
int
TypeAST.py -
int
DeclListAST generate
[FuncDecl: testAndRead]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
Packet
DeclListAST generate
[FuncDecl: testAndWrite]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
Packet
DeclListAST generate
[EnumDecl: AccessPermission]
DeclListAST generate
[EnumDecl: TesterStatus]
DeclListAST generate
[EnumDecl: InvalidateGeneratorStatus]
DeclListAST generate
[EnumDecl: SeriesRequestGeneratorStatus]
DeclListAST generate
[EnumDecl: LockStatus]
DeclListAST generate
[EnumDecl: SequencerStatus]
DeclListAST generate
[EnumDecl: TransitionResult]
DeclListAST generate
[EnumDecl: RubyRequestType]
DeclListAST generate
[EnumDecl: SequencerRequestType]
DeclListAST generate
[EnumDecl: CacheRequestType]
DeclListAST generate
[EnumDecl: CacheResourceType]
DeclListAST generate
[EnumDecl: DirectoryRequestType]
DeclListAST generate
[EnumDecl: DMASequencerRequestType]
DeclListAST generate
[EnumDecl: MemoryControlRequestType]
DeclListAST generate
[EnumDecl: MessageSizeType]
DeclListAST generate
[EnumDecl: AccessType]
DeclListAST generate
[EnumDecl: RubyAccessMode]
DeclListAST generate
[EnumDecl: PrefetchBit]
DeclListAST generate
[TypeDecl: SequencerMsg]
TypeAST.py -
Address
TypeAST.py -
Address
TypeAST.py -
SequencerRequestType
TypeAST.py -
Address
TypeAST.py -
RubyAccessMode
TypeAST.py -
DataBlock
TypeAST.py -
int
TypeAST.py -
PrefetchBit
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncCallExprAST - 
m_PhysicalAddress
FuncCallExprAST - 
m_DataBlk
FuncCallExprAST - 
param_pkt
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncCallExprAST - 
m_PhysicalAddress
FuncCallExprAST - 
m_DataBlk
FuncCallExprAST - 
param_pkt
DeclListAST generate
[EnumDecl: MaskPredictorType]
DeclListAST generate
[EnumDecl: MaskPredictorIndex]
DeclListAST generate
[EnumDecl: MaskPredictorTraining]
DeclListAST generate
[EnumDecl: RequestStatus]
DeclListAST generate
[EnumDecl: LinkDirection]
DeclListAST generate
[TypeDecl: MessageBuffer]
DeclListAST generate
[TypeDecl: OutPort]
DeclListAST generate
[TypeDecl: Scalar]
DeclListAST generate
[TypeDecl: InPort]
FuncDeclAST.py generate
void
TypeAST.py -
bool
FuncDeclAST.py generate
void
TypeAST.py -
Cycles
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
bool
DeclListAST generate
[TypeDecl: NodeID]
DeclListAST generate
[TypeDecl: MachineID]
DeclListAST generate
[TypeDecl: Set]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
DeclListAST generate
[TypeDecl: NetDest]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
int
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NetDest
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineType
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineID
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NetDest
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineType
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
NodeID
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
MachineID
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
NetDest
FuncDeclAST.py generate
void
TypeAST.py -
bool
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Set
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
NetDest
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
MachineType
DeclListAST generate
[TypeDecl: Sequencer]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
MachineType
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
MachineType
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
MachineType
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
MachineType
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
SequencerRequestType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
CacheResourceType
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[TypeDecl: RubyRequest]
TypeAST.py -
Address
TypeAST.py -
Address
TypeAST.py -
RubyRequestType
TypeAST.py -
Address
TypeAST.py -
RubyAccessMode
TypeAST.py -
int
TypeAST.py -
PrefetchBit
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: AbstractEntry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AccessPermission
DeclListAST generate
[TypeDecl: DirectoryMemory]
FuncDeclAST.py generate
void
TypeAST.py -
AbstractEntry
TypeAST.py -
Address
TypeAST.py -
AbstractEntry
FuncDeclAST.py generate
void
TypeAST.py -
AbstractEntry
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
DirectoryRequestType
DeclListAST generate
[TypeDecl: AbstractCacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AccessPermission
DeclListAST generate
[TypeDecl: AbstractProbeEntry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AccessPermission
DeclListAST generate
[TypeDecl: CacheMemory]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
AbstractCacheEntry
TypeAST.py -
Address
TypeAST.py -
AbstractCacheEntry
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
AbstractCacheEntry
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
AbstractCacheEntry
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
CacheRequestType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
CacheResourceType
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Scalar
TypeAST.py -
Scalar
DeclListAST generate
[TypeDecl: RegionBuffer]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
AbstractProbeEntry
TypeAST.py -
Address
TypeAST.py -
AbstractProbeEntry
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
AbstractProbeEntry
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
AbstractProbeEntry
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
CacheRequestType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
CacheResourceType
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Scalar
TypeAST.py -
Scalar
DeclListAST generate
[TypeDecl: WireBuffer]
DeclListAST generate
[TypeDecl: DMASequencer]
FuncDeclAST.py generate
void
TypeAST.py -
void
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
DataBlock
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
CacheRequestType
DeclListAST generate
[TypeDecl: TimerTable]
FuncDeclAST.py generate
void
TypeAST.py -
bool
FuncDeclAST.py generate
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Cycles
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
DeclListAST generate
[TypeDecl: GenericBloomFilter]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
int
DeclListAST generate
[TypeDecl: Prefetcher]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
RubyRequestType
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: cmpAddress]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: incAddress]
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: maskAddress]
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: error]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
std::string
DeclListAST generate
[FuncDecl: assert]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
bool
DeclListAST generate
[FuncDecl: random]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
int
DeclListAST generate
[FuncDecl: zero_time]
FuncDeclAST.py generate
void
TypeAST.py -
Cycles
DeclListAST generate
[FuncDecl: intToID]
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
TypeAST.py -
int
DeclListAST generate
[FuncDecl: IDToInt]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
NodeID
DeclListAST generate
[FuncDecl: procProfileCoherenceRequest]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
TypeAST.py -
bool
DeclListAST generate
[FuncDecl: dirProfileCoherenceRequest]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
NodeID
TypeAST.py -
bool
DeclListAST generate
[FuncDecl: max_tokens]
FuncDeclAST.py generate
void
TypeAST.py -
int
DeclListAST generate
[FuncDecl: setOffset]
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
TypeAST.py -
int
DeclListAST generate
[FuncDecl: makeLineAddress]
FuncDeclAST.py generate
void
TypeAST.py -
Address
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: addressOffset]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: mod]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
DeclListAST generate
[FuncDecl: machineCount]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
MachineType
DeclListAST generate
[FuncDecl: mapAddressToRange]
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
Address
TypeAST.py -
MachineType
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
NodeID
DeclListAST generate
[FuncDecl: broadcast]
FuncDeclAST.py generate
void
TypeAST.py -
NetDest
TypeAST.py -
MachineType
DeclListAST generate
[FuncDecl: map_Address_to_DMA]
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: map_Address_to_Directory]
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: map_Address_to_DirectoryNode]
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: machineIDToNodeID]
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
TypeAST.py -
MachineID
DeclListAST generate
[FuncDecl: machineIDToVersion]
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
TypeAST.py -
MachineID
DeclListAST generate
[FuncDecl: machineIDToMachineType]
FuncDeclAST.py generate
void
TypeAST.py -
MachineType
TypeAST.py -
MachineID
DeclListAST generate
[FuncDecl: createMachineID]
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
MachineType
TypeAST.py -
NodeID
DeclListAST generate
[ObjDecl: 'version']
TypeAST.py -
NodeID
DeclListAST generate
[ObjDecl: 'machineID']
TypeAST.py -
MachineID
DeclListAST generate
[ObjDecl: 'clusterID']
TypeAST.py -
NodeID
DeclListAST generate
[ObjDecl: 'responseFromMemory']
TypeAST.py -
MessageBuffer
DeclListAST generate
[FuncDecl: queueMemoryRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineID
TypeAST.py -
Address
TypeAST.py -
Cycles
DeclListAST generate
[FuncDecl: queueMemoryWrite]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineID
TypeAST.py -
Address
TypeAST.py -
Cycles
TypeAST.py -
DataBlock
DeclListAST generate
[FuncDecl: queueMemoryWritePartial]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
MachineID
TypeAST.py -
Address
TypeAST.py -
Cycles
TypeAST.py -
DataBlock
TypeAST.py -
int
DeclListAST generate
[FuncDecl: functionalMemoryRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Packet
DeclListAST generate
[FuncDecl: functionalMemoryWrite]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[EnumDecl: MemoryRequestType]
DeclListAST generate
[TypeDecl: MemoryMsg]
TypeAST.py -
Address
TypeAST.py -
MemoryRequestType
TypeAST.py -
MachineID
TypeAST.py -
MachineID
TypeAST.py -
DataBlock
TypeAST.py -
MessageSizeType
TypeAST.py -
PrefetchBit
TypeAST.py -
bool
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncCallExprAST - 
m_Addr
FuncCallExprAST - 
m_DataBlk
FuncCallExprAST - 
param_pkt
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncCallExprAST - 
m_Addr
FuncCallExprAST - 
m_DataBlk
FuncCallExprAST - 
param_pkt
DeclListAST generate
[EnumDecl: CoherenceRequestType]
DeclListAST generate
[EnumDecl: CoherenceRequestTypeVI]
DeclListAST generate
[EnumDecl: CoherenceResponseType]
DeclListAST generate
[EnumDecl: CoherenceResponseTypeVI]
DeclListAST generate
[EnumDecl: TriggerType]
DeclListAST generate
[TypeDecl: TriggerMsg]
TypeAST.py -
Address
TypeAST.py -
TriggerType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[TypeDecl: RequestMsg]
TypeAST.py -
Address
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
NetDest
TypeAST.py -
MessageSizeType
TypeAST.py -
bool
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[TypeDecl: RequestMsgVI]
TypeAST.py -
Address
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
DataBlock
TypeAST.py -
MessageSizeType
TypeAST.py -
int
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[TypeDecl: ResponseMsg]
TypeAST.py -
Address
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineID
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
int
TypeAST.py -
MessageSizeType
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
int
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[TypeDecl: ResponseMsgVI]
TypeAST.py -
Address
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
DataBlock
TypeAST.py -
MessageSizeType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[EnumDecl: DMARequestType]
DeclListAST generate
[EnumDecl: DMAResponseType]
DeclListAST generate
[TypeDecl: DMARequestMsg]
TypeAST.py -
DMARequestType
TypeAST.py -
Address
TypeAST.py -
Address
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
DataBlock
TypeAST.py -
int
TypeAST.py -
MessageSizeType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[TypeDecl: DMAResponseMsg]
TypeAST.py -
DMAResponseType
TypeAST.py -
Address
TypeAST.py -
Address
TypeAST.py -
NetDest
TypeAST.py -
DataBlock
TypeAST.py -
MessageSizeType
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Packet
DeclListAST generate
[Machine: 'L1Cache']
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[ObjDecl: 'mandatoryQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[TypeDecl: Entry]
StateMachine.py addType - 
Entry
StateMachine.py addType Cache
TypeAST.py -
State
TypeAST.py -
bool
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
bool
DeclListAST generate
[TypeDecl: TBE]
StateMachine.py addType - 
TBE
StateMachine.py addType TBE
TypeAST.py -
State
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
int
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MachineID
TypeAST.py -
MachineID
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
DeclListAST generate
[TypeDecl: TBETable]
StateMachine.py addType - 
TBETable
FuncDeclAST.py generate
void
TypeAST.py -
TBE
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
DeclListAST generate
[ObjDecl: 'TBEs']
TypeAST.py -
TBETable
DeclListAST generate
[FuncDecl: set_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: set_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
DeclListAST generate
[FuncDecl: unset_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpAllBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: curCycle]
FuncDeclAST.py generate
void
TypeAST.py -
Cycles
DeclListAST generate
[FuncDecl: set_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: getCacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
Entry
(((*m_L2cache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
(((*m_L1Dcache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
(((*m_L1Icache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
FuncCallExprAST - 
("Missing data block")
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
int
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
DeclListAST generate
[FuncDecl: getL2CacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
Entry
(((*m_L2cache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: getL1DCacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
Entry
(((*m_L1Dcache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: getL1ICacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
Entry
(((*m_L1Icache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
(((*m_L1Dcache_ptr)).isTagPresent(param_addr))
(((*m_L1Icache_ptr)).isTagPresent(param_addr))
FuncCallExprAST - 
(((((*m_L1Dcache_ptr)).isTagPresent(param_addr)) && (((*m_L1Icache_ptr)).isTagPresent(param_addr))) == (false))
(((*m_L1Icache_ptr)).isTagPresent(param_addr))
(((*m_L2cache_ptr)).isTagPresent(param_addr))
FuncCallExprAST - 
(((((*m_L1Icache_ptr)).isTagPresent(param_addr)) && (((*m_L2cache_ptr)).isTagPresent(param_addr))) == (false))
(((*m_L1Dcache_ptr)).isTagPresent(param_addr))
(((*m_L2cache_ptr)).isTagPresent(param_addr))
FuncCallExprAST - 
(((((*m_L1Dcache_ptr)).isTagPresent(param_addr)) && (((*m_L2cache_ptr)).isTagPresent(param_addr))) == (false))
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
(*tbe).m_TBEState
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_CacheState
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
FuncCallExprAST - 
param_state
MethodCallExprAST AbstractCacheEntry prefix
((*(param_cache_entry)).
FuncCallExprAST - 
param_state
((*(param_cache_entry)).changePermission((L1Cache_State_to_permission(param_state))))
DeclListAST generate
[FuncDecl: mandatory_request_type_to_event]
FuncDeclAST.py generate
void
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
("Invalid RubyRequestType")
DeclListAST generate
[FuncDecl: testAndClearLocalHit]
FuncDeclAST.py generate
void
TypeAST.py -
MachineType
TypeAST.py -
Entry
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
DeclListAST generate
[FuncDecl: IsAtomicAccessed]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Entry
FuncCallExprAST - 
(param_cache_entry != NULL)
DeclListAST generate
[ObjDecl: 'triggerQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[OutPortDecl: 'requestNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'responseNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'unblockNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'triggerQueue_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: triggerQueue_in]
TypeAST.py -
InPort
(((*m_triggerQueue_ptr)).isReady())
TypeAST.py -
TriggerMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Complete_L2_to_L1
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_All_acks
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_All_acks_no_sharers
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: responseToCache_in]
TypeAST.py -
InPort
(((*m_responseToCache_ptr)).isReady())
TypeAST.py -
ResponseMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Shared_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Shared_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Exclusive_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: forwardToCache_in]
TypeAST.py -
InPort
(((*m_forwardToCache_ptr)).isReady())
TypeAST.py -
RequestMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Other_GETX
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Merged_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
FuncCallExprAST - 
cache_entry
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Other_GETS_No_Mig
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Other_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Other_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_NC_DMA_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Invalidate
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Writeback_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Writeback_Nack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Block_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: mandatoryQueue_in]
TypeAST.py -
InPort
(((*m_mandatoryQueue_ptr)).isReady())
TypeAST.py -
RubyRequest
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(mandatory_request_type_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Icache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_L2cache_ptr)).cacheAvail(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L1_to_L2
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Dcache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Address
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L2_Replacement
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
(getL2CacheEntry(l2_victim_addr))
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
(((*m_L1Icache_ptr)).cacheAvail(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Trigger_L2_to_L1I
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L2cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(mandatory_request_type_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Icache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Address
(((*m_L1Icache_ptr)).cacheProbe(((*in_msg_ptr)).m_LineAddress))
(((*m_L2cache_ptr)).cacheAvail(l1i_victim_addr))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L1_to_L2
FuncCallExprAST - 
l1i_victim_addr
FuncCallExprAST - 
l1i_victim_addr
FuncCallExprAST - 
(getL1ICacheEntry(l1i_victim_addr))
(((*m_TBEs_ptr)).lookup(l1i_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l1i_victim_addr))
TypeAST.py -
Address
(((*m_L2cache_ptr)).cacheProbe(l1i_victim_addr))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L2_Replacement
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
(getL2CacheEntry(l2_victim_addr))
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(mandatory_request_type_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Dcache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_L2cache_ptr)).cacheAvail(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L1_to_L2
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Icache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Address
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L2_Replacement
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
(getL2CacheEntry(l2_victim_addr))
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
(((*m_L1Dcache_ptr)).cacheAvail(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_Trigger_L2_to_L1D
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L2cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(mandatory_request_type_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
L1Dcache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Address
(((*m_L1Dcache_ptr)).cacheProbe(((*in_msg_ptr)).m_LineAddress))
(((*m_L2cache_ptr)).cacheAvail(l1d_victim_addr))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L1_to_L2
FuncCallExprAST - 
l1d_victim_addr
FuncCallExprAST - 
l1d_victim_addr
FuncCallExprAST - 
(getL1DCacheEntry(l1d_victim_addr))
(((*m_TBEs_ptr)).lookup(l1d_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l1d_victim_addr))
TypeAST.py -
Address
(((*m_L2cache_ptr)).cacheProbe(l1d_victim_addr))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
L1Cache_Event_L2_Replacement
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
l2_victim_addr
FuncCallExprAST - 
(getL2CacheEntry(l2_victim_addr))
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(l2_victim_addr))
DeclListAST generate
[ActionDecl: 'a_issueGETS']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'b_issueGETX']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'b_issueGETXIfMoreThanOne']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'bf_issueGETF']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'c_sendExclusiveData']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ct_sendExclusiveDataFromTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'd_issuePUT']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'df_issuePUTF']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'e_sendData']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ee_sendDataShared']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'et_sendDataSharedFromTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'em_sendDataSharedMultiple']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'emt_sendDataSharedMultipleFromTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'f_sendAck']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
FuncCallExprAST - 
(((*in_msg_ptr)).m_DirectedProbe == (false))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ff_sendAckShared']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
FuncCallExprAST - 
(((*in_msg_ptr)).m_DirectedProbe == (false))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'g_sendUnblock']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'gm_sendUnblockM']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'gs_sendUnblockS']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'h_load_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
m_cache_entry_ptr
FuncCallExprAST - 
m_cache_entry_ptr
(((*m_sequencer_ptr)).readCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (false), (testAndClearLocalHit(m_cache_entry_ptr))))
DeclListAST generate
[ActionDecl: 'hx_external_load_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
(((*m_sequencer_ptr)).readCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (true), (machineIDToMachineType(((*in_msg_ptr)).m_Sender)), (*m_tbe_ptr).m_InitialRequestTime, (*m_tbe_ptr).m_ForwardRequestTime, (*m_tbe_ptr).m_FirstResponseTime))
DeclListAST generate
[ActionDecl: 'hh_store_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
RubyRequest
FuncCallExprAST - 
m_cache_entry_ptr
FuncCallExprAST - 
m_cache_entry_ptr
(((*m_sequencer_ptr)).writeCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (false), (testAndClearLocalHit(m_cache_entry_ptr))))
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
DeclListAST generate
[ActionDecl: 'hh_flush_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).writeCallback(addr, (*m_tbe_ptr).m_DataBlk, (false), MachineType_L1Cache))
DeclListAST generate
[ActionDecl: 'sx_external_store_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
(((*m_sequencer_ptr)).writeCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (true), (machineIDToMachineType(((*in_msg_ptr)).m_Sender)), (*m_tbe_ptr).m_InitialRequestTime, (*m_tbe_ptr).m_ForwardRequestTime, (*m_tbe_ptr).m_FirstResponseTime))
DeclListAST generate
[ActionDecl: 'sxt_trig_ext_store_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(*m_tbe_ptr).m_LastResponder
FuncCallExprAST - 
(*m_tbe_ptr).m_LastResponder
(((*m_sequencer_ptr)).writeCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (true), (machineIDToMachineType((*m_tbe_ptr).m_LastResponder)), (*m_tbe_ptr).m_InitialRequestTime, (*m_tbe_ptr).m_ForwardRequestTime, (*m_tbe_ptr).m_FirstResponseTime))
DeclListAST generate
[ActionDecl: 'i_allocateTBE']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
DeclListAST generate
[ActionDecl: 'it_allocateTBE']
ActionDeclAST adding EntryType var
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
DeclListAST generate
[ActionDecl: 'j_popTriggerQueue']
ActionDeclAST adding EntryType var
(((*m_triggerQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'k_popMandatoryQueue']
ActionDeclAST adding EntryType var
(((*m_mandatoryQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'l_popForwardQueue']
ActionDeclAST adding EntryType var
(((*m_forwardToCache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'hp_copyFromTBEToL2']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'nb_copyFromTBEToL1']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'm_decrementNumberOfMessages']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Acks >= (0))
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
((*m_tbe_ptr).m_InitialRequestTime == ((*in_msg_ptr)).m_InitialRequestTime)
FuncCallExprAST - 
((*m_tbe_ptr).m_ForwardRequestTime == ((*in_msg_ptr)).m_ForwardRequestTime)
DeclListAST generate
[ActionDecl: 'uo_updateCurrentOwner']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'n_popResponseQueue']
ActionDeclAST adding EntryType var
(((*m_responseToCache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'll_L2toL1Transfer']
ActionDeclAST adding EntryType var
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'o_checkForCompletion']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'p_decrementNumberOfMessagesByOne']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'pp_incrementNumberOfMessagesByOne']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'q_sendDataFromTBEToCache']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Requestor != m_machineID)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'sq_sendSharedDataFromTBEToCache']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Requestor != m_machineID)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'qm_sendDataFromTBEToCache']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'qq_sendDataFromTBEToMemory']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'r_setSharerBit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 's_deallocateTBE']
ActionDeclAST adding EntryType var
(((*m_TBEs_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 't_sendExclusiveDataFromTBEToMemory']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'u_writeDataToCache']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
DeclListAST generate
[ActionDecl: 'uf_writeDataToCacheTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'v_writeDataToCacheVerify']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
((*m_cache_entry_ptr).m_DataBlk == ((*in_msg_ptr)).m_DataBlk)
DeclListAST generate
[ActionDecl: 'vt_writeDataToTBEVerify']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
((*m_tbe_ptr).m_DataBlk == ((*in_msg_ptr)).m_DataBlk)
DeclListAST generate
[ActionDecl: 'gg_deallocateL1CacheBlock']
ActionDeclAST adding EntryType var
(((*m_L1Dcache_ptr)).isTagPresent(addr))
(((*m_L1Dcache_ptr)).deallocate(addr))
(((*m_L1Icache_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'ii_allocateL1DCacheBlock']
ActionDeclAST adding EntryType var
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_L1Dcache_ptr)).allocate(addr, new L1Cache_Entry))
FuncCallExprAST - 
(((*m_L1Dcache_ptr)).allocate(addr, new L1Cache_Entry))
DeclListAST generate
[ActionDecl: 'jj_allocateL1ICacheBlock']
ActionDeclAST adding EntryType var
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_L1Icache_ptr)).allocate(addr, new L1Cache_Entry))
FuncCallExprAST - 
(((*m_L1Icache_ptr)).allocate(addr, new L1Cache_Entry))
DeclListAST generate
[ActionDecl: 'vv_allocateL2CacheBlock']
ActionDeclAST adding EntryType var
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_L2cache_ptr)).allocate(addr, new L1Cache_Entry))
FuncCallExprAST - 
(((*m_L2cache_ptr)).allocate(addr, new L1Cache_Entry))
DeclListAST generate
[ActionDecl: 'rr_deallocateL2CacheBlock']
ActionDeclAST adding EntryType var
(((*m_L2cache_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'forward_eviction_to_cpu']
ActionDeclAST adding EntryType var
(((*m_sequencer_ptr)).evictionCallback(addr))
DeclListAST generate
[ActionDecl: 'uu_profileL1DataMiss']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'uu_profileL1DataHit']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'uu_profileL1InstMiss']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'uu_profileL1InstHit']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'uu_profileL2Miss']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'uu_profileL2Hit']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'zz_stallAndWaitMandatoryQueue']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'z_stall']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'kd_wakeUpDependents']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'ka_wakeUpAllDependents']
ActionDeclAST adding EntryType var
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[Machine: 'GPUL1Cache']
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[EnumDecl: RequestType]
DeclListAST generate
[ObjDecl: 'mandatoryQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[TypeDecl: Entry]
StateMachine.py addType - 
Entry
StateMachine.py addType Cache
TypeAST.py -
State
TypeAST.py -
bool
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: TBE]
StateMachine.py addType - 
TBE
StateMachine.py addType TBE
TypeAST.py -
State
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: TBETable]
StateMachine.py addType - 
TBETable
FuncDeclAST.py generate
void
TypeAST.py -
TBE
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
DeclListAST generate
[ObjDecl: 'TBEs']
TypeAST.py -
TBETable
DeclListAST generate
[ObjDecl: 'temp_store_data']
TypeAST.py -
DataBlock
DeclListAST generate
[FuncDecl: set_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: set_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
DeclListAST generate
[FuncDecl: unset_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpAllBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: profileMsgDelay]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
int
TypeAST.py -
Cycles
DeclListAST generate
[FuncDecl: set_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: getCacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
(((*m_cache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[ObjDecl: 'l2_select_low_bit']
TypeAST.py -
int
DeclListAST generate
[FuncDecl: getL2ID]
FuncDeclAST.py generate
void
TypeAST.py -
MachineID
TypeAST.py -
Address
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
DeclListAST generate
[FuncDecl: mandatory_request_type_to_event]
FuncDeclAST.py generate
void
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
("Invalid RubyRequestType")
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
(*tbe).m_TBEState
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_CacheState
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
State
FuncCallExprAST - 
param_state
MethodCallExprAST AbstractCacheEntry prefix
((*(param_cache_entry)).
FuncCallExprAST - 
param_state
((*(param_cache_entry)).changePermission((GPUL1Cache_State_to_permission(param_state))))
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
FuncCallExprAST - 
("Missing data block")
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
int
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
DeclListAST generate
[FuncDecl: recordRequestType]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_cache_ptr)).recordRequestType(CacheRequestType_DataArrayRead))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_cache_ptr)).recordRequestType(CacheRequestType_DataArrayWrite))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_cache_ptr)).recordRequestType(CacheRequestType_TagArrayRead))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_cache_ptr)).recordRequestType(CacheRequestType_TagArrayWrite))
FuncCallExprAST - 
("Bad request type passed to recordRequestType")
DeclListAST generate
[FuncDecl: checkResourceAvailable]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_cache_ptr)).checkResourceAvailable(CacheResourceType_DataArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_cache_ptr)).checkResourceAvailable(CacheResourceType_DataArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_cache_ptr)).checkResourceAvailable(CacheResourceType_TagArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_cache_ptr)).checkResourceAvailable(CacheResourceType_TagArray, param_addr))
FuncCallExprAST - 
("Bad request type passed to checkResourceAvailable")
DeclListAST generate
[OutPortDecl: 'requestNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: responseNetwork_in]
TypeAST.py -
InPort
(((*m_responseToL1Cache_ptr)).isReady())
TypeAST.py -
ResponseMsgVI
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
(((*m_cache_ptr)).cacheAvail(((*in_msg_ptr)).m_Addr))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL1Cache_Event_Replacement
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(getCacheEntry((((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_TBEs_ptr)).lookup((((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL1Cache_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL1Cache_Event_Write_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: mandatoryQueue_in]
TypeAST.py -
InPort
(((*m_mandatoryQueue_ptr)).isReady())
TypeAST.py -
RubyRequest
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL1Cache_Event_FlashInv
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(mandatory_request_type_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
DeclListAST generate
[ActionDecl: 'a_issueRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsgVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_num_l2
FuncCallExprAST - 
m_l2_select_num_bits
FuncCallExprAST - 
(*m_l2_select_low_bit_ptr)
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_num_l2
FuncCallExprAST - 
m_l2_select_num_bits
FuncCallExprAST - 
(*m_l2_select_low_bit_ptr)
(((*out_msg).m_Destination).add((getL2ID(addr, m_num_l2, m_l2_select_num_bits, (*m_l2_select_low_bit_ptr)))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'b_issuePUT']
ActionDeclAST adding EntryType var
TypeAST.py -
RubyRequest
TypeAST.py -
RequestMsgVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_num_l2
FuncCallExprAST - 
m_l2_select_num_bits
FuncCallExprAST - 
(*m_l2_select_low_bit_ptr)
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_num_l2
FuncCallExprAST - 
m_l2_select_num_bits
FuncCallExprAST - 
(*m_l2_select_low_bit_ptr)
(((*out_msg).m_Destination).add((getL2ID(addr, m_num_l2, m_l2_select_num_bits, (*m_l2_select_low_bit_ptr)))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
(((*in_msg_ptr)).writeData((*out_msg).m_DataBlk))
FuncCallExprAST - 
((*in_msg_ptr)).m_PhysicalAddress
DeclListAST generate
[ActionDecl: 'i_allocateL1CacheBlock']
ActionDeclAST adding EntryType var
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_cache_ptr)).allocate(addr, new GPUL1Cache_Entry))
FuncCallExprAST - 
(((*m_cache_ptr)).allocate(addr, new GPUL1Cache_Entry))
DeclListAST generate
[ActionDecl: 'h_deallocateL1CacheBlock']
ActionDeclAST adding EntryType var
(((*m_cache_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'm_popMandatoryQueue']
ActionDeclAST adding EntryType var
(((*m_mandatoryQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'n_popResponseQueue']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(1)
(((*m_responseToL1Cache_ptr)).dequeue())
FuncCallExprAST - 
(((*m_responseToL1Cache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'p_profileMiss']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'q_profileHit']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'r_load_hit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).readCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (false), MachineType_GPUL1Cache))
DeclListAST generate
[ActionDecl: 'rx_load_hit']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsgVI
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
(((*m_sequencer_ptr)).readCallback(addr, (*m_cache_entry_ptr).m_DataBlk, (true), (machineIDToMachineType(((*in_msg_ptr)).m_Sender))))
DeclListAST generate
[ActionDecl: 'rb_load_hit']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsgVI
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
(((*m_sequencer_ptr)).readCallback(addr, (*m_tbe_ptr).m_DataBlk, (true), (machineIDToMachineType(((*in_msg_ptr)).m_Sender))))
DeclListAST generate
[ActionDecl: 's_store_hit']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).writeCallback(addr, (*m_temp_store_data_ptr), (false), MachineType_GPUL1Cache))
DeclListAST generate
[ActionDecl: 'sa_atomic_hit']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsgVI
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
(((*m_sequencer_ptr)).writeCallback(addr, (*m_tbe_ptr).m_DataBlk, (true), (machineIDToMachineType(((*in_msg_ptr)).m_Sender))))
DeclListAST generate
[ActionDecl: 'u_writeDataToCache']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsgVI
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
DeclListAST generate
[ActionDecl: 'v_allocateTBE']
ActionDeclAST adding EntryType var
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
DeclListAST generate
[ActionDecl: 'w_deallocateTBE']
ActionDeclAST adding EntryType var
(((*m_TBEs_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'f_flashInv']
ActionDeclAST adding EntryType var
(((*m_cache_ptr)).flashInvalidate())
DeclListAST generate
[ActionDecl: 'fr_flashInvEesp']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).writeCallback(addr, (*m_tbe_ptr).m_DataBlk, (false), MachineType_GPUL1Cache))
DeclListAST generate
[ActionDecl: 'zz_stallAndWaitMandatoryQueue']
ActionDeclAST adding EntryType var
DeclListAST generate
[ActionDecl: 'kd_wakeUpDependents']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'ka_wakeUpAllDependents']
ActionDeclAST adding EntryType var
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[Machine: 'GPUL2Cache']
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[EnumDecl: RequestType]
DeclListAST generate
[TypeDecl: Entry]
StateMachine.py addType - 
Entry
StateMachine.py addType Cache
TypeAST.py -
State
TypeAST.py -
bool
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: ProbeEntry]
StateMachine.py addType - 
ProbeEntry
StateMachine.py addType Probe
TypeAST.py -
State
TypeAST.py -
bool
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: TBE]
StateMachine.py addType - 
TBE
StateMachine.py addType TBE
TypeAST.py -
State
TypeAST.py -
DataBlock
TypeAST.py -
bool
TypeAST.py -
int
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MachineID
TypeAST.py -
MachineID
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
DataBlock
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
MachineID
TypeAST.py -
int
TypeAST.py -
int
DeclListAST generate
[TypeDecl: TBETable]
StateMachine.py addType - 
TBETable
FuncDeclAST.py generate
void
TypeAST.py -
TBE
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
DeclListAST generate
[ObjDecl: 'TBEs']
TypeAST.py -
TBETable
DeclListAST generate
[FuncDecl: set_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: set_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
DeclListAST generate
[FuncDecl: unset_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: set_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractProbeEntry
DeclListAST generate
[FuncDecl: unset_probe_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: wakeUpAllBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: curCycle]
FuncDeclAST.py generate
void
TypeAST.py -
Cycles
DeclListAST generate
[FuncDecl: getCacheEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
(((*m_L2cache_ptr)).lookup(param_address))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: getProbeEntry]
FuncDeclAST.py generate
void
TypeAST.py -
ProbeEntry
TypeAST.py -
Address
(((*m_regionBuffer_ptr)).lookup(param_address))
TypeAST.py -
ProbeEntry
TypeAST.py -
ProbeEntry
TypeAST.py -
ProbeEntry
TypeAST.py -
ProbeEntry
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
ProbeEntry
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
TypeAST.py -
Entry
TypeAST.py -
ProbeEntry
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
(*tbe).m_TBEState
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_CacheState
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Entry
TypeAST.py -
ProbeEntry
TypeAST.py -
Address
TypeAST.py -
State
FuncCallExprAST - 
param_state
MethodCallExprAST AbstractCacheEntry prefix
((*(param_cache_entry)).
FuncCallExprAST - 
param_state
((*(param_cache_entry)).changePermission((GPUL2Cache_State_to_permission(param_state))))
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
FuncCallExprAST - 
("Missing data block")
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
int
TypeAST.py -
Entry
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*cache_entry).m_DataBlk
FuncCallExprAST - 
param_pkt
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
DeclListAST generate
[FuncDecl: L1Cache_request_type_to_event]
FuncDeclAST.py generate
void
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
Address
TypeAST.py -
MachineID
TypeAST.py -
Entry
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
CoherenceRequestTypeVI
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
("Invalid L1 request type")
DeclListAST generate
[FuncDecl: recordRequestType]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_L2cache_ptr)).recordRequestType(CacheRequestType_DataArrayRead))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_L2cache_ptr)).recordRequestType(CacheRequestType_DataArrayWrite))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_L2cache_ptr)).recordRequestType(CacheRequestType_TagArrayRead))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_L2cache_ptr)).recordRequestType(CacheRequestType_TagArrayWrite))
FuncCallExprAST - 
("Bad request type passed to recordRequestType")
DeclListAST generate
[FuncDecl: checkResourceAvailable]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_L2cache_ptr)).checkResourceAvailable(CacheResourceType_DataArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_L2cache_ptr)).checkResourceAvailable(CacheResourceType_DataArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_L2cache_ptr)).checkResourceAvailable(CacheResourceType_TagArray, param_addr))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_L2cache_ptr)).checkResourceAvailable(CacheResourceType_TagArray, param_addr))
FuncCallExprAST - 
("Bad request type passed to checkResourceAvailable")
DeclListAST generate
[ObjDecl: 'triggerQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[OutPortDecl: 'responseNetworkL1_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'requestNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'unblockNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'responseNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'triggerQueue_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: triggerQueue_in]
TypeAST.py -
InPort
(((*m_triggerQueue_ptr)).isReady())
TypeAST.py -
TriggerMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431bdd0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_All_acks
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431be10>, <m5.util.code_formatter.code_formatter object at 0x431bed0>, <m5.util.code_formatter.code_formatter object at 0x431bf90>, <m5.util.code_formatter.code_formatter object at 0x431bfd0>]
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c210>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_All_acks_no_sharers
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c310>, <m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c390>]
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: responseToCache_in]
TypeAST.py -
InPort
(((*m_responseToCache_ptr)).isReady())
TypeAST.py -
ResponseMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c0d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c310>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c1d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Shared_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c290>, <m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c390>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c290>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c410>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c250>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Shared_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c290>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c1d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Exclusive_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c490>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>]
FuncCallExprAST - 
("Unexpected message")
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c210>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c350>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Shared_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c310>, <m5.util.code_formatter.code_formatter object at 0x431c150>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c410>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c310>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c3d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Shared_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c310>, <m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c210>]
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c350>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Exclusive_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c310>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c250>]
FuncCallExprAST - 
("Unexpected message")
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Address
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c5d0>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c350>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c250>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c410>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c150>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c510>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c5d0>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c350>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>, <m5.util.code_formatter.code_formatter object at 0x431c250>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c610>, <m5.util.code_formatter.code_formatter object at 0x431c510>, <m5.util.code_formatter.code_formatter object at 0x431c410>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c550>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>, <m5.util.code_formatter.code_formatter object at 0x431c150>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c590>, <m5.util.code_formatter.code_formatter object at 0x431c5d0>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c350>, <m5.util.code_formatter.code_formatter object at 0x431c510>]
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
prefetchAddr
(((*m_L2cache_ptr)).cacheAvail(prefetchAddr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c310>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_L2cache_ptr)).cacheProbe(prefetchAddr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(prefetchAddr))))
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c450>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c2d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Prefetch
FuncCallExprAST - 
prefetchAddr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(prefetchAddr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(prefetchAddr))
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c3d0>, <m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c4d0>]
DeclListAST generate
[InPortDecl: forwardToCache_in]
TypeAST.py -
InPort
(((*m_forwardToCache_ptr)).isReady())
TypeAST.py -
RequestMsg
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c4d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Other_GETX
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c150>, <m5.util.code_formatter.code_formatter object at 0x431c250>, <m5.util.code_formatter.code_formatter object at 0x431c2d0>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c650>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Merged_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c690>, <m5.util.code_formatter.code_formatter object at 0x431c750>, <m5.util.code_formatter.code_formatter object at 0x431c790>, <m5.util.code_formatter.code_formatter object at 0x431c7d0>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c750>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Other_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c650>, <m5.util.code_formatter.code_formatter object at 0x431c8d0>, <m5.util.code_formatter.code_formatter object at 0x431c890>, <m5.util.code_formatter.code_formatter object at 0x431c910>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c910>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_NC_DMA_GETS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c650>, <m5.util.code_formatter.code_formatter object at 0x431c8d0>, <m5.util.code_formatter.code_formatter object at 0x431c950>, <m5.util.code_formatter.code_formatter object at 0x431c890>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c810>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Invalidate
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c650>, <m5.util.code_formatter.code_formatter object at 0x431c750>, <m5.util.code_formatter.code_formatter object at 0x431c910>, <m5.util.code_formatter.code_formatter object at 0x431c850>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c650>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Writeback_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c750>, <m5.util.code_formatter.code_formatter object at 0x431c910>, <m5.util.code_formatter.code_formatter object at 0x431c810>, <m5.util.code_formatter.code_formatter object at 0x431c890>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c750>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Writeback_Nack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c910>, <m5.util.code_formatter.code_formatter object at 0x431c990>, <m5.util.code_formatter.code_formatter object at 0x431c950>, <m5.util.code_formatter.code_formatter object at 0x431c9d0>]
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c910>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Block_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
tbe
[<m5.util.code_formatter.code_formatter object at 0x431c990>, <m5.util.code_formatter.code_formatter object at 0x431ca10>, <m5.util.code_formatter.code_formatter object at 0x431ca50>, <m5.util.code_formatter.code_formatter object at 0x431ca90>]
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: requestQueue_in]
TypeAST.py -
InPort
(((*m_requestFromL1Cache_ptr)).isReady())
TypeAST.py -
RequestMsgVI
TypeAST.py -
Entry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
(((*m_L2cache_ptr)).cacheAvail(((*in_msg_ptr)).m_Addr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c1d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
[<m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c7d0>, <m5.util.code_formatter.code_formatter object at 0x431c790>, <m5.util.code_formatter.code_formatter object at 0x431c0d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c0d0>)
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
((*in_msg_ptr)).m_Requestor
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
(L1Cache_request_type_to_event(((*in_msg_ptr)).m_Type, ((*in_msg_ptr)).m_Addr, ((*in_msg_ptr)).m_Requestor, cache_entry))
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
[<m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c690>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>, <m5.util.code_formatter.code_formatter object at 0x431c6d0>]
(((*m_L2cache_ptr)).cacheAvail(((*in_msg_ptr)).m_Addr))
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c6d0>)
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUL2Cache_Event_Replacement
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(getCacheEntry((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_L2cache_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
[<m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c9d0>, <m5.util.code_formatter.code_formatter object at 0x431c710>, <m5.util.code_formatter.code_formatter object at 0x431c1d0>]
Trigger Function, Expected ,4 got 5
([Symbol: ProbeEntry], <m5.util.code_formatter.code_formatter object at 0x431c1d0>)
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
((*in_msg_ptr)).m_Requestor
FuncCallExprAST - 
cache_entry
FuncCallExprAST - 
(L1Cache_request_type_to_event(((*in_msg_ptr)).m_Type, ((*in_msg_ptr)).m_Addr, ((*in_msg_ptr)).m_Requestor, cache_entry))
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
cache_entry
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
[<m5.util.code_formatter.code_formatter object at 0x431c2d0>, <m5.util.code_formatter.code_formatter object at 0x431c410>, <m5.util.code_formatter.code_formatter object at 0x431c6d0>, <m5.util.code_formatter.code_formatter object at 0x431c790>]
DeclListAST generate
[ActionDecl: 'a_issueGETS']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
addr
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'b_issueGETX']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ProbeEntry
FuncCallExprAST - 
addr
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'd_issuePUT']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ii_allocateL2CacheBlock']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_L2cache_ptr)).allocate(addr, new GPUL2Cache_Entry))
FuncCallExprAST - 
(((*m_L2cache_ptr)).allocate(addr, new GPUL2Cache_Entry))
DeclListAST generate
[ActionDecl: 'rr_deallocateL2CacheBlock']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_L2cache_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'rq_popL1IncomingQueue']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_requestFromL1Cache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'n_popResponseQueue']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_responseToCache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'j_popTriggerQueue']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_triggerQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'l_popForwardQueue']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_forwardToCache_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'h_load_hit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
RequestMsgVI
TypeAST.py -
ResponseMsgVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'hx_external_load_hit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
ResponseMsg
TypeAST.py -
ResponseMsgVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
(((*out_msg).m_Destination).add((*m_tbe_ptr).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'hh_store_hit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
RequestMsgVI
(((*m_cache_entry_ptr).m_DataBlk).copyPartial(((*in_msg_ptr)).m_DataBlk, ((*in_msg_ptr)).m_Offset, ((*in_msg_ptr)).m_Size))
DeclListAST generate
[ActionDecl: 'sx_external_store_hit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*m_cache_entry_ptr).m_DataBlk).copyPartial((*m_tbe_ptr).m_DirtyDataBlk, (*m_tbe_ptr).m_Offset, (*m_tbe_ptr).m_Size))
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
DeclListAST generate
[ActionDecl: 'sxt_trig_ext_store_hit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*m_cache_entry_ptr).m_DataBlk).copyPartial((*m_tbe_ptr).m_DirtyDataBlk, (*m_tbe_ptr).m_Offset, (*m_tbe_ptr).m_Size))
FuncCallExprAST - 
(*m_tbe_ptr).m_LastResponder
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
(*m_tbe_ptr).m_LastResponder
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
(*m_tbe_ptr).m_LastResponder
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
("Only expect responses from Directory, L1Cache or GPUL2Cache")
DeclListAST generate
[ActionDecl: 'as_ackStore']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsgVI
TypeAST.py -
ResponseMsgVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'aes_ackExternalStore']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
ResponseMsgVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
TypeAST.py -
CoherenceResponseTypeVI
(((*out_msg).m_Destination).add((*m_tbe_ptr).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'es_recordRequestor']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
RequestMsgVI
DeclListAST generate
[ActionDecl: 'es_recordRequestor_prefetch']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
RequestMsgVI
DeclListAST generate
[ActionDecl: 'u_writeDataToCache']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
DeclListAST generate
[ActionDecl: 'i_allocateTBE']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
DeclListAST generate
[ActionDecl: 's_deallocateTBE']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_TBEs_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'z_stall']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
DeclListAST generate
[ActionDecl: 'zz_stallAndWaitRequestQueue']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
DeclListAST generate
[ActionDecl: 'm_decrementNumberOfMessages']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Acks >= (0))
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
((*m_tbe_ptr).m_InitialRequestTime == ((*in_msg_ptr)).m_InitialRequestTime)
FuncCallExprAST - 
((*m_tbe_ptr).m_ForwardRequestTime == ((*in_msg_ptr)).m_ForwardRequestTime)
DeclListAST generate
[ActionDecl: 'o_checkForCompletion']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'uo_updateCurrentOwner']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'p_decrementNumberOfMessagesByOne']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'pp_incrementNumberOfMessagesByOne']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'kd_wakeUpDependents']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'ka_wakeUpAllDependents']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
DeclListAST generate
[ActionDecl: 'r_setSharerBit']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'gm_sendUnblockM']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'gs_sendUnblockS']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'v_writeDataToCacheVerify']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
((*m_cache_entry_ptr).m_DataBlk == ((*in_msg_ptr)).m_DataBlk)
DeclListAST generate
[ActionDecl: 'q_sendDataFromTBEToCache']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Requestor != m_machineID)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'sq_sendSharedDataFromTBEToCache']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Requestor != m_machineID)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'qm_sendDataFromTBEToCache']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'qq_sendDataFromTBEToMemory']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 't_sendExclusiveDataFromTBEToMemory']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'f_sendAck']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
FuncCallExprAST - 
(((*in_msg_ptr)).m_DirectedProbe == (false))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ff_sendAckShared']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
FuncCallExprAST - 
(((*in_msg_ptr)).m_DirectedProbe == (false))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'g_sendUnblock']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'e_sendData']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ee_sendDataShared']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'c_sendExclusiveData']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'em_sendDataSharedMultiple']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'uu_profileWriteMiss']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
DeclListAST generate
[ActionDecl: 'vv_profileReadMiss']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
DeclListAST generate
[ActionDecl: 'ii_allocateRegionArrayBlock']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
paramType is
Address
paramType is
ProbeEntry
implements_interface set to true
RegionBuffer
allocate
[[Symbol: Address], [Symbol: ProbeEntry]]
(((*m_regionBuffer_ptr)).allocate(addr, m_probe_entry_ptr))
FuncCallExprAST - 
(((*m_regionBuffer_ptr)).allocate(addr, m_probe_entry_ptr))
TypeAST.py -
ProbeEntry
paramType is
Address
paramType is
ProbeEntry
implements_interface set to true
RegionBuffer
allocate
[[Symbol: Address], [Symbol: ProbeEntry]]
TypeAST.py -
ProbeEntry
(((*m_regionBuffer_ptr)).allocate(addr, new GPUL2Cache_ProbeEntry))
FuncCallExprAST - 
(((*m_regionBuffer_ptr)).allocate(addr, new GPUL2Cache_ProbeEntry))
DeclListAST generate
[ActionDecl: 'rr_deallocateRegionArrayBlock']
ActionDeclAST adding EntryType var
ActionDeclAST adding RegionBufferType var
(((*m_regionBuffer_ptr)).deallocate(addr))
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[Machine: 'GPUCopyDMA']
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[TypeDecl: TBE]
StateMachine.py addType - 
TBE
StateMachine.py addType TBE
TypeAST.py -
State
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: TBETable]
StateMachine.py addType - 
TBETable
FuncDeclAST.py generate
void
TypeAST.py -
TBE
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
int
DeclListAST generate
[ObjDecl: 'TBEs']
TypeAST.py -
TBETable
DeclListAST generate
[FuncDecl: set_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
DeclListAST generate
[FuncDecl: unset_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[ObjDecl: 'mandatoryQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
TBE
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
FuncCallExprAST - 
("CE does not support functional read.")
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
FuncCallExprAST - 
("CE does not support functional write.")
DeclListAST generate
[OutPortDecl: 'reqToDirectory_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: dmaRequestQueue_in]
TypeAST.py -
InPort
(((*m_mandatoryQueue_ptr)).isReady())
TypeAST.py -
RubyRequest
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUCopyDMA_Event_ReadRequest
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
RubyRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUCopyDMA_Event_WriteRequest
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
("Invalid request type")
DeclListAST generate
[InPortDecl: dmaResponseQueue_in]
TypeAST.py -
InPort
(((*m_responseFromDir_ptr)).isReady())
TypeAST.py -
DMAResponseMsg
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUCopyDMA_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
GPUCopyDMA_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
FuncCallExprAST - 
("Invalid response type")
DeclListAST generate
[ActionDecl: 's_sendReadRequest']
TypeAST.py -
RubyRequest
TypeAST.py -
DMARequestMsg
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 's_sendWriteRequest']
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
RubyRequest
TypeAST.py -
DMARequestMsg
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 's_ackCallback']
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMAResponseMsg
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).writeCallback(((*in_msg_ptr)).m_LineAddress, (*m_tbe_ptr).m_DataBlk, (false), MachineType_GPUCopyDMA))
DeclListAST generate
[ActionDecl: 'd_dataCallback']
TypeAST.py -
DMAResponseMsg
TypeAST.py -
DataBlock
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*m_sequencer_ptr)).readCallback(((*in_msg_ptr)).m_LineAddress, db, (false), MachineType_GPUCopyDMA))
DeclListAST generate
[ActionDecl: 'p_popRequestQueue']
(((*m_mandatoryQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'p_popResponseQueue']
(((*m_responseFromDir_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'v_allocateTBE']
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
DeclListAST generate
[ActionDecl: 'w_deallocateTBE']
(((*m_TBEs_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'zz_stallAndWaitDmaQueue']
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[Machine: 'Directory']
TypeAST.py -
DirectoryMemory
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[EnumDecl: RequestType]
DeclListAST generate
[TypeDecl: Entry]
StateMachine.py addType - 
Entry
TypeAST.py -
State
TypeAST.py -
DataBlock
DeclListAST generate
[TypeDecl: PfEntry]
StateMachine.py addType - 
PfEntry
StateMachine.py addType Cache
TypeAST.py -
State
TypeAST.py -
MachineID
TypeAST.py -
DataBlock
TypeAST.py -
NetDest
DeclListAST generate
[TypeDecl: TBE]
StateMachine.py addType - 
TBE
StateMachine.py addType TBE
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
CoherenceResponseType
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
DataBlock
TypeAST.py -
DataBlock
TypeAST.py -
int
TypeAST.py -
MachineID
TypeAST.py -
NetDest
TypeAST.py -
int
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
DeclListAST generate
[TypeDecl: TBETable]
StateMachine.py addType - 
TBETable
FuncDeclAST.py generate
void
TypeAST.py -
TBE
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: set_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
AbstractCacheEntry
DeclListAST generate
[FuncDecl: unset_cache_entry]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: set_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
DeclListAST generate
[FuncDecl: unset_tbe]
FuncDeclAST.py generate
void
TypeAST.py -
void
DeclListAST generate
[FuncDecl: wakeUpBuffers]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: curCycle]
FuncDeclAST.py generate
void
TypeAST.py -
Cycles
DeclListAST generate
[ObjDecl: 'fwd_set']
TypeAST.py -
NetDest
DeclListAST generate
[ObjDecl: 'TBEs']
TypeAST.py -
TBETable
DeclListAST generate
[FuncDecl: getDirectoryEntry]
FuncDeclAST.py generate
void
TypeAST.py -
Entry
TypeAST.py -
Address
TypeAST.py -
Entry
(((*m_directory_ptr)).lookup(param_addr))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
paramType is
Address
paramType is
Entry
implements_interface set to true
DirectoryMemory
allocate
[[Symbol: Address], [Symbol: Entry]]
TypeAST.py -
Entry
(((*m_directory_ptr)).allocate(param_addr, new Directory_Entry))
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
TypeAST.py -
Entry
DeclListAST generate
[FuncDecl: getProbeFilterEntry]
FuncDeclAST.py generate
void
TypeAST.py -
PfEntry
TypeAST.py -
Address
TypeAST.py -
PfEntry
(((*m_probeFilter_ptr)).lookup(param_addr))
TypeAST.py -
PfEntry
TypeAST.py -
PfEntry
TypeAST.py -
PfEntry
TypeAST.py -
PfEntry
DeclListAST generate
[FuncDecl: getSharerId]
FuncDeclAST.py generate
void
TypeAST.py -
NodeID
TypeAST.py -
MachineID
TypeAST.py -
NodeID
FuncCallExprAST - 
param_mach
FuncCallExprAST - 
param_mach
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
loc
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
FuncCallExprAST - 
((IDToInt(loc)) + (machineCount(MachineType_L1Cache)))
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
TBE
TypeAST.py -
PfEntry
TypeAST.py -
Address
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
((*param_pf_entry).m_PfState == (*(getDirectoryEntry(param_addr))).m_DirectoryState)
FuncCallExprAST - 
param_addr
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
TBE
TypeAST.py -
PfEntry
TypeAST.py -
Address
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
FuncCallExprAST - 
(param_pf_entry != NULL)
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
FuncCallExprAST - 
((param_pf_entry != NULL) == (false))
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
TypeAST.py -
State
FuncCallExprAST - 
((param_tbe != NULL) == (false))
FuncCallExprAST - 
param_addr
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
(*tbe).m_TBEState
(((*m_directory_ptr)).isPresent(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*(getDirectoryEntry(param_addr))).m_DirectoryState
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
PfEntry
TypeAST.py -
Address
TypeAST.py -
State
FuncCallExprAST - 
param_state
FuncCallExprAST - 
param_addr
MethodCallExprAST AbstractCacheEntry prefix
((*((getDirectoryEntry(param_addr)))).
FuncCallExprAST - 
param_state
((*((getDirectoryEntry(param_addr)))).changePermission((Directory_State_to_permission(param_state))))
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
FuncCallExprAST - 
param_pkt
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
TypeAST.py -
int
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(param_addr))
FuncCallExprAST - 
param_addr
FuncCallExprAST - 
(*tbe).m_DataBlk
FuncCallExprAST - 
param_pkt
FuncCallExprAST - 
param_pkt
DeclListAST generate
[FuncDecl: cache_request_to_event]
FuncDeclAST.py generate
void
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
("Invalid CoherenceRequestType")
DeclListAST generate
[FuncDecl: recordRequestType]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_probeFilter_ptr)).recordRequestType(CacheRequestType_DataArrayRead))
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
TypeAST.py -
CacheRequestType
(((*m_probeFilter_ptr)).recordRequestType(CacheRequestType_DataArrayWrite))
FuncCallExprAST - 
("Bad request type passed to recordRequestType")
DeclListAST generate
[FuncDecl: checkResourceAvailable]
FuncDeclAST.py generate
void
TypeAST.py -
bool
TypeAST.py -
RequestType
TypeAST.py -
Address
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
RequestType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
TypeAST.py -
CacheResourceType
(((*m_probeFilter_ptr)).checkResourceAvailable(CacheResourceType_TagArray, param_addr))
FuncCallExprAST - 
("Bad request type passed to checkResourceAvailable")
DeclListAST generate
[ObjDecl: 'triggerQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[OutPortDecl: 'requestQueue_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'forwardNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'responseNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'dmaResponseNetwork_out']
TypeAST.py -
OutPort
DeclListAST generate
[OutPortDecl: 'triggerQueue_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: triggerQueue_in]
TypeAST.py -
InPort
(((*m_triggerQueue_ptr)).isReady())
TypeAST.py -
TriggerMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_All_acks_and_owner_data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_All_acks_and_shared_data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_All_acks_and_data_no_sharers
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_All_Unblocks
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: unblockNetwork_in]
TypeAST.py -
InPort
(((*m_unblockToDir_ptr)).isReady())
TypeAST.py -
ResponseMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Unblock
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_UnblockS
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_UnblockM
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Writeback_Clean
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Writeback_Dirty
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Writeback_Exclusive_Clean
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Writeback_Exclusive_Dirty
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Invalid message")
DeclListAST generate
[InPortDecl: responseToDir_in]
TypeAST.py -
InPort
(((*m_responseToDir_ptr)).isReady())
TypeAST.py -
ResponseMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Shared_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Shared_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Exclusive_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Unexpected message")
DeclListAST generate
[InPortDecl: memQueue_in]
TypeAST.py -
InPort
(((*m_responseFromMemory_ptr)).isReady())
TypeAST.py -
MemoryMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
MemoryRequestType
TypeAST.py -
MemoryRequestType
TypeAST.py -
MemoryRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Memory_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
MemoryRequestType
TypeAST.py -
MemoryRequestType
TypeAST.py -
MemoryRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Memory_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Invalid message")
DeclListAST generate
[InPortDecl: requestQueue_in]
TypeAST.py -
InPort
(((*m_requestToDir_ptr)).isReady())
TypeAST.py -
RequestMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_Addr))
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_PUT
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_PUTF
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(cache_request_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
(((*m_probeFilter_ptr)).cacheAvail(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(cache_request_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_Pf_Replacement
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
FuncCallExprAST - 
(getProbeFilterEntry((((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))
(((*m_TBEs_ptr)).lookup((((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup((((*m_probeFilter_ptr)).cacheProbe(((*in_msg_ptr)).m_Addr))))
FuncCallExprAST - 
((*in_msg_ptr)).m_Type
FuncCallExprAST - 
(cache_request_to_event(((*in_msg_ptr)).m_Type))
FuncCallExprAST - 
((*in_msg_ptr)).m_Addr
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
DeclListAST generate
[InPortDecl: dmaRequestQueue_in]
TypeAST.py -
InPort
(((*m_dmaRequestToDir_ptr)).isReady())
TypeAST.py -
DMARequestMsg
TypeAST.py -
PfEntry
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
TBE
(((*m_TBEs_ptr)).lookup(((*in_msg_ptr)).m_LineAddress))
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_DMA_READ
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
Directory_Event_DMA_WRITE
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
pf_entry
FuncCallExprAST - 
tbe
FuncCallExprAST - 
("Invalid message")
DeclListAST generate
[ActionDecl: 'r_setMRU']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*m_probeFilter_ptr)).setMRU(addr))
DeclListAST generate
[ActionDecl: 'auno_assertUnblockerNotOwner']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
((*m_cache_entry_ptr).m_Owner != ((*in_msg_ptr)).m_Sender)
(((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Sender))
FuncCallExprAST - 
((((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Sender)) == (false))
DeclListAST generate
[ActionDecl: 'uo_updateOwnerIfPf']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
ResponseMsg
(((*m_cache_entry_ptr).m_Sharers).clear())
(((*m_cache_entry_ptr).m_Sharers).add(((*in_msg_ptr)).m_Sender))
DeclListAST generate
[ActionDecl: 'us_updateSharerIfFBD']
ActionDeclAST adding EntryType var
(((*m_probeFilter_ptr)).isTagPresent(addr))
FuncCallExprAST - 
(((*m_probeFilter_ptr)).isTagPresent(addr))
TypeAST.py -
ResponseMsg
(((*m_cache_entry_ptr).m_Sharers).add(((*in_msg_ptr)).m_Sender))
DeclListAST generate
[ActionDecl: 'a_sendWriteBackAck']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'oc_sendBlockAck']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'b_sendWriteBackNack']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'pfa_probeFilterAllocate']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
TypeAST.py -
PfEntry
paramType is
Address
paramType is
PfEntry
implements_interface set to true
CacheMemory
allocate
[[Symbol: Address], [Symbol: PfEntry]]
TypeAST.py -
PfEntry
(((*m_probeFilter_ptr)).allocate(addr, new Directory_PfEntry))
FuncCallExprAST - 
(((*m_probeFilter_ptr)).allocate(addr, new Directory_PfEntry))
DeclListAST generate
[ActionDecl: 'pfd_probeFilterDeallocate']
ActionDeclAST adding EntryType var
(((*m_probeFilter_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'ppfd_possibleProbeFilterDeallocate']
ActionDeclAST adding EntryType var
(((*m_probeFilter_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'v_allocateTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
DeclListAST generate
[ActionDecl: 'vd_allocateDmaRequestInTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
DMARequestMsg
(((*m_TBEs_ptr)).allocate(addr))
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
(((*m_TBEs_ptr)).lookup(addr))
FuncCallExprAST - 
addr
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'pa_setPendingMsgsToAll']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*m_cache_entry_ptr).m_Sharers).count())
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'po_setPendingMsgsToOne']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'w_deallocateTBE']
ActionDeclAST adding EntryType var
(((*m_TBEs_ptr)).deallocate(addr))
DeclListAST generate
[ActionDecl: 'sa_setAcksToOne']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*m_fwd_set_ptr)).remove(((*in_msg_ptr)).m_Requestor))
(((*m_fwd_set_ptr)).count())
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
(((*m_fwd_set_ptr)).count())
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'saa_setAcksToAllIfPF']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
DeclListAST generate
[ActionDecl: 'm_decrementNumberOfMessages']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(((*in_msg_ptr)).m_Acks > (0))
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
DeclListAST generate
[ActionDecl: 'mu_decrementNumberOfUnblocks']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
FuncCallExprAST - 
(((*in_msg_ptr)).m_Type == CoherenceResponseType_UNBLOCKS)
DeclListAST generate
[ActionDecl: 'n_popResponseQueue']
ActionDeclAST adding EntryType var
(((*m_responseToDir_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'o_checkForCompletion']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'os_checkForMergedGetSCompletion']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'sp_setPendingMsgsToMergedSharers']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*m_tbe_ptr).m_GetSRequestors).count())
DeclListAST generate
[ActionDecl: 'spa_setPendingAcksToZeroIfPF']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'sc_signalCompletionIfPF']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(m_probe_filter_enabled || m_full_bit_dir_enabled)
TypeAST.py -
TriggerMsg
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
TypeAST.py -
TriggerType
DeclListAST generate
[ActionDecl: 'd_sendData']
ActionDeclAST adding EntryType var
TypeAST.py -
MemoryMsg
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_OriginalRequestorMachId))
FuncCallExprAST - 
((*out_msg).m_Acks > (0))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'dr_sendDmaData']
ActionDeclAST adding EntryType var
TypeAST.py -
MemoryMsg
TypeAST.py -
DMAResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
(((*out_msg).m_Destination).add((*m_tbe_ptr).m_DmaRequestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'dt_sendDmaDataFromTbe']
ActionDeclAST adding EntryType var
TypeAST.py -
TriggerMsg
TypeAST.py -
DMAResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
(((*out_msg).m_Destination).add((*m_tbe_ptr).m_DmaRequestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'da_sendDmaAck']
ActionDeclAST adding EntryType var
TypeAST.py -
DMAResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
(((*out_msg).m_Destination).add((*m_tbe_ptr).m_DmaRequestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'rx_recordExclusiveInTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
DeclListAST generate
[ActionDecl: 'r_recordDataInTBE']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*m_fwd_set_ptr)).remove(((*in_msg_ptr)).m_Requestor))
(((*m_fwd_set_ptr)).count())
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
DeclListAST generate
[ActionDecl: 'rs_recordGetSRequestor']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
(((*m_tbe_ptr).m_GetSRequestors).add(((*in_msg_ptr)).m_Requestor))
DeclListAST generate
[ActionDecl: 'r_setSharerBit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'so_setOwnerBit']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'qf_queueMemoryFetchRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Requestor
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_to_memory_controller_latency
DeclListAST generate
[ActionDecl: 'qd_queueMemoryRequestFromDmaRead']
ActionDeclAST adding EntryType var
TypeAST.py -
DMARequestMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Requestor
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_to_memory_controller_latency
DeclListAST generate
[ActionDecl: 'fn_forwardRequestIfNecessary']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
RequestMsg
(((*m_fwd_set_ptr)).remove(((*in_msg_ptr)).m_Requestor))
(((*m_fwd_set_ptr)).count())
TypeAST.py -
RequestMsg
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
FuncCallExprAST - 
((*m_tbe_ptr).m_SilentAcks > (0))
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
(((*out_msg).m_Destination).remove(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'ia_invalidateAllRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
(((*m_cache_entry_ptr).m_Sharers).count())
FuncCallExprAST - 
((((*m_cache_entry_ptr).m_Sharers).count()) > (0))
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'io_invalidateOwnerRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
(((*out_msg).m_Destination).add((*m_cache_entry_ptr).m_Owner))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'fb_forwardRequestBcast']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
RequestMsg
(((*m_fwd_set_ptr)).remove(((*in_msg_ptr)).m_Requestor))
(((*m_fwd_set_ptr)).count())
TypeAST.py -
RequestMsg
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
(((*m_fwd_set_ptr)).count())
TypeAST.py -
RequestMsg
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
(((*out_msg).m_Destination).remove(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
RequestMsg
TypeAST.py -
ResponseMsg
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'fr_forwardMergeReadRequestsToOwner']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
FuncCallExprAST - 
(((machineCount(MachineType_L1Cache)) + (machineCount(MachineType_GPUL2Cache))) > (1))
TypeAST.py -
ResponseMsg
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
TypeAST.py -
CoherenceResponseType
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_CurOwner))
(((*out_msg).m_Destination).add(((*in_msg_ptr)).m_Sender))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'fc_forwardRequestConditionalOwner']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
FuncCallExprAST - 
(((machineCount(MachineType_L1Cache)) + (machineCount(MachineType_GPUL2Cache))) > (1))
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*out_msg).m_Destination).add((*m_cache_entry_ptr).m_Owner))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
(((*out_msg).m_Destination).remove(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'nofc_forwardRequestConditionalOwner']
ActionDeclAST adding EntryType var
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_L1Cache
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
FuncCallExprAST - 
MachineType_GPUL2Cache
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
(((*out_msg).m_Destination).add((*m_cache_entry_ptr).m_Owner))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
RequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
(((*out_msg).m_Destination).remove(((*in_msg_ptr)).m_Requestor))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'f_forwardWriteFromDma']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMARequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'f_forwardReadFromDma']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
TypeAST.py -
DMARequestMsg
TypeAST.py -
RequestMsg
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
CoherenceRequestType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_L1Cache))
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
TypeAST.py -
MachineType
(((*out_msg).m_Destination).broadcast(MachineType_GPUL2Cache))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'i_popIncomingRequestQueue']
ActionDeclAST adding EntryType var
(((*m_requestToDir_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'j_popIncomingUnblockQueue']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
(((*m_unblockToDir_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'k_wakeUpDependents']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'l_popMemQueue']
ActionDeclAST adding EntryType var
(((*m_responseFromMemory_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'g_popTriggerQueue']
ActionDeclAST adding EntryType var
(((*m_triggerQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'p_popDmaRequestQueue']
ActionDeclAST adding EntryType var
(((*m_dmaRequestToDir_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'zd_stallAndWaitDMARequest']
ActionDeclAST adding EntryType var
TypeAST.py -
DMARequestMsg
DeclListAST generate
[ActionDecl: 'r_recordMemoryData']
ActionDeclAST adding EntryType var
TypeAST.py -
MemoryMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'r_recordCacheData']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(m_tbe_ptr != NULL)
DeclListAST generate
[ActionDecl: 'wr_writeResponseDataToMemory']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'l_writeDataToMemory']
ActionDeclAST adding EntryType var
TypeAST.py -
MemoryMsg
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'dwt_writeDmaDataFromTBE']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
addr
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
FuncCallExprAST - 
(*m_tbe_ptr).m_PhysicalAddress
FuncCallExprAST - 
addr
FuncCallExprAST - 
(*m_tbe_ptr).m_PhysicalAddress
(((*(getDirectoryEntry(addr))).m_DataBlk).copyPartial((*m_tbe_ptr).m_DmaDataBlk, (addressOffset((*m_tbe_ptr).m_PhysicalAddress)), (*m_tbe_ptr).m_Len))
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'wdt_writeDataFromTBE']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'a_assertCacheData']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(*m_tbe_ptr).m_CacheDirty
DeclListAST generate
[ActionDecl: 'ano_assertNotOwner']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
FuncCallExprAST - 
(m_cache_entry_ptr != NULL)
FuncCallExprAST - 
((*m_cache_entry_ptr).m_Owner != ((*in_msg_ptr)).m_Requestor)
DeclListAST generate
[ActionDecl: 'ans_assertNotSharer']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
(((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Requestor))
FuncCallExprAST - 
((((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Requestor)) == (false))
DeclListAST generate
[ActionDecl: 'rs_removeSharer']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
(((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Sender))
FuncCallExprAST - 
(((*m_cache_entry_ptr).m_Sharers).isElement(((*in_msg_ptr)).m_Sender))
(((*m_cache_entry_ptr).m_Sharers).remove(((*in_msg_ptr)).m_Sender))
DeclListAST generate
[ActionDecl: 'cs_clearSharers']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
(((*m_cache_entry_ptr).m_Sharers).clear())
(((*m_cache_entry_ptr).m_Sharers).add(((*in_msg_ptr)).m_Requestor))
DeclListAST generate
[ActionDecl: 'l_queueMemoryWBRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
((*in_msg_ptr)).m_Sender
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_to_memory_controller_latency
FuncCallExprAST - 
((*in_msg_ptr)).m_DataBlk
DeclListAST generate
[ActionDecl: 'ld_queueMemoryDmaWrite']
ActionDeclAST adding EntryType var
FuncCallExprAST - 
(m_tbe_ptr != NULL)
FuncCallExprAST - 
(*m_tbe_ptr).m_DmaRequestor
FuncCallExprAST - 
addr
FuncCallExprAST - 
m_to_memory_controller_latency
FuncCallExprAST - 
(*m_tbe_ptr).m_DmaDataBlk
FuncCallExprAST - 
(*m_tbe_ptr).m_Len
DeclListAST generate
[ActionDecl: 'll_checkIncomingWriteback']
ActionDeclAST adding EntryType var
TypeAST.py -
ResponseMsg
FuncCallExprAST - 
(((*in_msg_ptr)).m_Dirty == (false))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
FuncCallExprAST - 
(((*in_msg_ptr)).m_MessageSize == MessageSizeType_Writeback_Control)
FuncCallExprAST - 
addr
DeclListAST generate
[ActionDecl: 'z_stallAndWaitRequest']
ActionDeclAST adding EntryType var
TypeAST.py -
RequestMsg
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[Machine: 'DMA']
TypeAST.py -
DMASequencer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
DeclListAST generate
[StateDecl: State]
DeclListAST generate
[EnumDecl: Event]
DeclListAST generate
[ObjDecl: 'mandatoryQueue']
TypeAST.py -
MessageBuffer
DeclListAST generate
[ObjDecl: 'cur_state']
TypeAST.py -
State
DeclListAST generate
[FuncDecl: getState]
FuncDeclAST.py generate
void
TypeAST.py -
State
TypeAST.py -
Address
DeclListAST generate
[FuncDecl: setState]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: getAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
AccessPermission
TypeAST.py -
Address
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
TypeAST.py -
AccessPermission
DeclListAST generate
[FuncDecl: setAccessPermission]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
State
DeclListAST generate
[FuncDecl: functionalRead]
FuncDeclAST.py generate
void
TypeAST.py -
void
TypeAST.py -
Address
TypeAST.py -
Packet
FuncCallExprAST - 
("DMA does not support functional read.")
DeclListAST generate
[FuncDecl: functionalWrite]
FuncDeclAST.py generate
void
TypeAST.py -
int
TypeAST.py -
Address
TypeAST.py -
Packet
FuncCallExprAST - 
("DMA does not support functional write.")
DeclListAST generate
[OutPortDecl: 'reqToDirectory_out']
TypeAST.py -
OutPort
DeclListAST generate
[InPortDecl: dmaRequestQueue_in]
TypeAST.py -
InPort
(((*m_mandatoryQueue_ptr)).isReady())
TypeAST.py -
SequencerMsg
TypeAST.py -
SequencerRequestType
TypeAST.py -
SequencerRequestType
TypeAST.py -
SequencerRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
DMA_Event_ReadRequest
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
SequencerRequestType
TypeAST.py -
SequencerRequestType
TypeAST.py -
SequencerRequestType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
DMA_Event_WriteRequest
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
("Invalid request type")
DeclListAST generate
[InPortDecl: dmaResponseQueue_in]
TypeAST.py -
InPort
(((*m_responseFromDir_ptr)).isReady())
TypeAST.py -
DMAResponseMsg
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
DMA_Event_Ack
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
DMAResponseType
TypeAST.py -
Event
TypeAST.py -
Event
TypeAST.py -
Event
FuncCallExprAST - 
DMA_Event_Data
FuncCallExprAST - 
((*in_msg_ptr)).m_LineAddress
FuncCallExprAST - 
("Invalid response type")
DeclListAST generate
[ActionDecl: 's_sendReadRequest']
TypeAST.py -
SequencerMsg
TypeAST.py -
DMARequestMsg
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 's_sendWriteRequest']
TypeAST.py -
SequencerMsg
TypeAST.py -
DMARequestMsg
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
TypeAST.py -
DMARequestType
FuncCallExprAST - 
addr
FuncCallExprAST - 
addr
(((*out_msg).m_Destination).add((map_Address_to_Directory(addr))))
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
TypeAST.py -
MessageSizeType
DeclListAST generate
[ActionDecl: 'a_ackCallback']
TypeAST.py -
DMAResponseMsg
(((*m_dma_sequencer_ptr)).ackCallback())
DeclListAST generate
[ActionDecl: 'd_dataCallback']
TypeAST.py -
DMAResponseMsg
(((*m_dma_sequencer_ptr)).dataCallback(((*in_msg_ptr)).m_DataBlk))
DeclListAST generate
[ActionDecl: 'p_popRequestQueue']
(((*m_mandatoryQueue_ptr)).dequeue())
DeclListAST generate
[ActionDecl: 'p_popResponseQueue']
(((*m_responseFromDir_ptr)).dequeue())
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
DeclListAST generate
[TransitionDecl: ]
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
CacheMemory
TypeAST.py -
int
TypeAST.py -
int
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
RegionBuffer
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
CacheMemory
TypeAST.py -
RegionBuffer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
Sequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DirectoryMemory
TypeAST.py -
DirectoryMemory
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DirectoryMemory
TypeAST.py -
CacheMemory
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
bool
TypeAST.py -
bool
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DMASequencer
TypeAST.py -
DMASequencer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
TypeAST.py -
DMASequencer
TypeAST.py -
Cycles
TypeAST.py -
MessageBuffer
TypeAST.py -
MessageBuffer
scons: done reading SConscript files.
scons: Building targets ...
 [NEW DEPS] X86_VI_hammer_GPU/arch/x86/generated/inc.d -> x86-vi-hammer-gpu-deps
 [ENVIRONS] x86-vi-hammer-gpu-deps -> x86-vi-hammer-gpu-environs
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/AbstractMemory_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/AddrRange_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/BasicExtLink_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/BasicIntLink_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/BasicRouter_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/Characteristic_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/Clock_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/ClockedObject_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/Counter_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/CreditLink_d_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/EmulatedDriver_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/ExtCharacteristic_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/FUDesc_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/IdeDisk_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/Int_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_d_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/Process_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/SrcClockDomain_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/TimingExpr_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86ACPISysDescTable_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86E820Entry_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86ISA_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPBaseConfigEntry_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPExtConfigEntry_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86SMBiosSMBiosStructure_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/X86TLB_vector.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_AddrMap.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_Enum.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_MemSched.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_PageManage.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_StaticInstFlags.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_TimingExprOp.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86I8259CascadeMode.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPAddressType.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPInterruptType.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPPolarity.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPRangeList.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPTriggerMode.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_AddrMapper.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_AtomicSimpleCPU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BadDevice.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BaseCache.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BaseGarnetNetwork.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BaseKvmCPU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BaseSetAssoc.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_BaseXBar.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Bridge.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CheckerCPU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Cmos.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CoherentXBar.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CommMonitor.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CopyEngine.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CowDiskImage.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_CudaCore.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DMASequencer.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DMA_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DRAMCtrl.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DVFSHandler.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DerivO3CPU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DerivedClockDomain.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DirectedGenerator.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Directory_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_DummyChecker.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_EtherBus.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevBase.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_EtherLink.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_EtherTap.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_ExeTracer.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_ExternalMaster.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_ExternalSlave.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_FALRU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyDMA_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyEngine.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GPUL1Cache_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GPUL2Cache_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink_d.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink_d.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface_d.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork_d.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter_d.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_I8042.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_I82094AA.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_I8237.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_I8254.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_IGbE.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_IdeController.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_IntelTrace.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_InvalidateGenerator.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_IsaFake.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_L1Cache_Controller.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_LRU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_LinuxX86System.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_LiveProcess.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_MemChecker.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_MemCheckerMonitor.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_MemTest.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_NSGigE.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_NativeTrace.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_NetworkTest.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_NoncoherentXBar.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_O3Checker.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Pc.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_PcSpeaker.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_PciConfigAll.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_PciVirtIO.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Prefetcher.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_ProbeListenerObject.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_QueuedPrefetcher.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RandomRepl.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RangeAddrMapper.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RawDiskImage.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Root.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectedTester.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RubyMemoryControl.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RubyPortProxy.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RubyTester.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_RubyWireBuffer.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SeriesRequestGenerator.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_ShaderLSQ.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimPoint.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimpleDisk.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimpleExtLink.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimpleIntLink.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimpleNetwork.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SimpleTrace.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Sinic.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SouthBridge.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_StridePrefetcher.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_SubSystem.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Switch.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TaggedPrefetcher.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Terminal.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TickedObject.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprBin.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprIf.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLet.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLiteral.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprReadIntReg.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprRef.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprSrcReg.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprUn.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TimingSimpleCPU.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_TrafficGen.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Uart.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_Uart8250.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PBase.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PDiod.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket.i -> _wrap.cc, .py
 [ SO SWIG] VirtIOBlock -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.i -> _wrap.cc, .py
 [ SO SWIG] VirtIOConsole -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase.i -> _wrap.cc, .py
 [ SO SWIG] VncInput -> X86_VI_hammer_GPU/python/m5/internal/param_VncInput.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VncInput.i -> _wrap.cc, .py
 [ SO SWIG] VncServer -> X86_VI_hammer_GPU/python/m5/internal/param_VncServer.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VncServer.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncInput_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncServer_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86ISA.i -> _wrap.cc, .py
 [ SO SWIG] X86IntLine -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.i
 [ SO SWIG] X86IntSinkPin -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ISA_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin.i -> _wrap.cc, .py
 [ SO SWIG] X86IntelMPAddrSpaceMapping -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping_wrap.cc -> .o
 [ SO SWIG] X86IntelMPBus -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry_wrap.cc -> .o
 [ SO SWIG] X86IntelMPBusHierarchy -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.i
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.i -> _wrap.cc, .py
 [ SO SWIG] X86IntelMPCompatAddrSpaceMod -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer.i -> _wrap.cc, .py
 [ SO SWIG] X86IntelMPIOAPIC -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC_wrap.cc -> .o
 [ SO SWIG] X86IntelMPIOIntAssignment -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.i -> _wrap.cc, .py
 [ SO SWIG] X86IntelMPLocalIntAssignment -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.i -> _wrap.cc, .py
 [ SO SWIG] X86IntelMPProcessor -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment_wrap.cc -> .o
 [ SO SWIG] X86KvmCPU -> X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU_wrap.cc -> .o
 [ SO SWIG] X86NativeTrace -> X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.i -> _wrap.cc, .py
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker.i -> _wrap.cc, .py
 [ SO SWIG] X86SMBiosBiosInformation -> X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.i
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86System.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable_wrap.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86System_wrap.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/python/m5/internal/param_X86TLB.i -> _wrap.cc, .py
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86TLB_wrap.cc -> .o
 [EMBED SW] core -> X86_VI_hammer_GPU/python/swig/core.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/core.i_init.cc -> .o
 [EMBED SW] debug -> X86_VI_hammer_GPU/python/swig/debug.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/debug.i_init.cc -> .o
 [EMBED SW] drain -> X86_VI_hammer_GPU/python/swig/drain.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/drain.i_init.cc -> .o
 [EMBED SW] event -> X86_VI_hammer_GPU/python/swig/event.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/event.i_init.cc -> .o
 [EMBED SW] pyobject -> X86_VI_hammer_GPU/python/swig/pyobject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/pyobject.i_init.cc -> .o
 [EMBED SW] range -> X86_VI_hammer_GPU/python/swig/range.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/range.i_init.cc -> .o
 [EMBED SW] serialize -> X86_VI_hammer_GPU/python/swig/serialize.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/serialize.i_init.cc -> .o
 [EMBED SW] stats -> X86_VI_hammer_GPU/python/swig/stats.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/stats.i_init.cc -> .o
 [EMBED SW] trace -> X86_VI_hammer_GPU/python/swig/trace.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/swig/trace.i_init.cc -> .o
 [EMBED SW] AbstractMemory_vector -> X86_VI_hammer_GPU/python/m5/internal/AbstractMemory_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/AbstractMemory_vector.i_init.cc -> .o
 [EMBED SW] AddrRange_vector -> X86_VI_hammer_GPU/python/m5/internal/AddrRange_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/AddrRange_vector.i_init.cc -> .o
 [EMBED SW] BasicExtLink_vector -> X86_VI_hammer_GPU/python/m5/internal/BasicExtLink_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicExtLink_vector.i_init.cc -> .o
 [EMBED SW] BasicIntLink_vector -> X86_VI_hammer_GPU/python/m5/internal/BasicIntLink_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicIntLink_vector.i_init.cc -> .o
 [EMBED SW] BasicRouter_vector -> X86_VI_hammer_GPU/python/m5/internal/BasicRouter_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicRouter_vector.i_init.cc -> .o
 [EMBED SW] Characteristic_vector -> X86_VI_hammer_GPU/python/m5/internal/Characteristic_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Characteristic_vector.i_init.cc -> .o
 [EMBED SW] Clock_vector -> X86_VI_hammer_GPU/python/m5/internal/Clock_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Clock_vector.i_init.cc -> .o
 [EMBED SW] ClockedObject_vector -> X86_VI_hammer_GPU/python/m5/internal/ClockedObject_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/ClockedObject_vector.i_init.cc -> .o
 [EMBED SW] Counter_vector -> X86_VI_hammer_GPU/python/m5/internal/Counter_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Counter_vector.i_init.cc -> .o
 [EMBED SW] CreditLink_d_vector -> X86_VI_hammer_GPU/python/m5/internal/CreditLink_d_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/CreditLink_d_vector.i_init.cc -> .o
 [EMBED SW] EmulatedDriver_vector -> X86_VI_hammer_GPU/python/m5/internal/EmulatedDriver_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/EmulatedDriver_vector.i_init.cc -> .o
 [EMBED SW] ExtCharacteristic_vector -> X86_VI_hammer_GPU/python/m5/internal/ExtCharacteristic_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/ExtCharacteristic_vector.i_init.cc -> .o
 [EMBED SW] FUDesc_vector -> X86_VI_hammer_GPU/python/m5/internal/FUDesc_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/FUDesc_vector.i_init.cc -> .o
 [EMBED SW] Float_vector -> X86_VI_hammer_GPU/python/m5/internal/Float_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Float_vector.i_init.cc -> .o
 [EMBED SW] IdeDisk_vector -> X86_VI_hammer_GPU/python/m5/internal/IdeDisk_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/IdeDisk_vector.i_init.cc -> .o
 [EMBED SW] Int_vector -> X86_VI_hammer_GPU/python/m5/internal/Int_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Int_vector.i_init.cc -> .o
 [EMBED SW] NetworkLink_vector -> X86_VI_hammer_GPU/python/m5/internal/NetworkLink_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_vector.i_init.cc -> .o
 [EMBED SW] NetworkLink_d_vector -> X86_VI_hammer_GPU/python/m5/internal/NetworkLink_d_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_d_vector.i_init.cc -> .o
 [EMBED SW] OpDesc_vector -> X86_VI_hammer_GPU/python/m5/internal/OpDesc_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/OpDesc_vector.i_init.cc -> .o
 [EMBED SW] Process_vector -> X86_VI_hammer_GPU/python/m5/internal/Process_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Process_vector.i_init.cc -> .o
 [EMBED SW] SrcClockDomain_vector -> X86_VI_hammer_GPU/python/m5/internal/SrcClockDomain_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/SrcClockDomain_vector.i_init.cc -> .o
 [EMBED SW] String_vector -> X86_VI_hammer_GPU/python/m5/internal/String_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/String_vector.i_init.cc -> .o
 [EMBED SW] TimingExpr_vector -> X86_VI_hammer_GPU/python/m5/internal/TimingExpr_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/TimingExpr_vector.i_init.cc -> .o
 [EMBED SW] Voltage_vector -> X86_VI_hammer_GPU/python/m5/internal/Voltage_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Voltage_vector.i_init.cc -> .o
 [EMBED SW] X86ACPISysDescTable_vector -> X86_VI_hammer_GPU/python/m5/internal/X86ACPISysDescTable_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86ACPISysDescTable_vector.i_init.cc -> .o
 [EMBED SW] X86E820Entry_vector -> X86_VI_hammer_GPU/python/m5/internal/X86E820Entry_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86E820Entry_vector.i_init.cc -> .o
 [EMBED SW] X86ISA_vector -> X86_VI_hammer_GPU/python/m5/internal/X86ISA_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86ISA_vector.i_init.cc -> .o
 [EMBED SW] X86IntelMPBaseConfigEntry_vector -> X86_VI_hammer_GPU/python/m5/internal/X86IntelMPBaseConfigEntry_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPBaseConfigEntry_vector.i_init.cc -> .o
 [EMBED SW] X86IntelMPExtConfigEntry_vector -> X86_VI_hammer_GPU/python/m5/internal/X86IntelMPExtConfigEntry_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPExtConfigEntry_vector.i_init.cc -> .o
 [EMBED SW] X86SMBiosSMBiosStructure_vector -> X86_VI_hammer_GPU/python/m5/internal/X86SMBiosSMBiosStructure_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86SMBiosSMBiosStructure_vector.i_init.cc -> .o
 [EMBED SW] X86TLB_vector -> X86_VI_hammer_GPU/python/m5/internal/X86TLB_vector.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86TLB_vector.i_init.cc -> .o
 [EMBED SW] enum_AddrMap -> X86_VI_hammer_GPU/python/m5/internal/enum_AddrMap.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_AddrMap.i_init.cc -> .o
 [EMBED SW] enum_Characteristic -> X86_VI_hammer_GPU/python/m5/internal/enum_Characteristic.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_Characteristic.i_init.cc -> .o
 [EMBED SW] enum_Enum -> X86_VI_hammer_GPU/python/m5/internal/enum_Enum.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_Enum.i_init.cc -> .o
 [EMBED SW] enum_ExtCharacteristic -> X86_VI_hammer_GPU/python/m5/internal/enum_ExtCharacteristic.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_ExtCharacteristic.i_init.cc -> .o
 [EMBED SW] enum_IdeID -> X86_VI_hammer_GPU/python/m5/internal/enum_IdeID.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_IdeID.i_init.cc -> .o
 [EMBED SW] enum_MemSched -> X86_VI_hammer_GPU/python/m5/internal/enum_MemSched.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_MemSched.i_init.cc -> .o
 [EMBED SW] enum_MemoryMode -> X86_VI_hammer_GPU/python/m5/internal/enum_MemoryMode.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_MemoryMode.i_init.cc -> .o
 [EMBED SW] enum_OpClass -> X86_VI_hammer_GPU/python/m5/internal/enum_OpClass.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_OpClass.i_init.cc -> .o
 [EMBED SW] enum_PageManage -> X86_VI_hammer_GPU/python/m5/internal/enum_PageManage.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_PageManage.i_init.cc -> .o
 [EMBED SW] enum_StaticInstFlags -> X86_VI_hammer_GPU/python/m5/internal/enum_StaticInstFlags.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_StaticInstFlags.i_init.cc -> .o
 [EMBED SW] enum_TimingExprOp -> X86_VI_hammer_GPU/python/m5/internal/enum_TimingExprOp.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_TimingExprOp.i_init.cc -> .o
 [EMBED SW] enum_X86I8259CascadeMode -> X86_VI_hammer_GPU/python/m5/internal/enum_X86I8259CascadeMode.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86I8259CascadeMode.i_init.cc -> .o
 [EMBED SW] enum_X86IntelMPAddressType -> X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPAddressType.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPAddressType.i_init.cc -> .o
 [EMBED SW] enum_X86IntelMPInterruptType -> X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPInterruptType.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPInterruptType.i_init.cc -> .o
 [EMBED SW] enum_X86IntelMPPolarity -> X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPPolarity.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPPolarity.i_init.cc -> .o
 [EMBED SW] enum_X86IntelMPRangeList -> X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPRangeList.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPRangeList.i_init.cc -> .o
 [EMBED SW] enum_X86IntelMPTriggerMode -> X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPTriggerMode.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPTriggerMode.i_init.cc -> .o
 [EMBED SW] param_AbstractMemory -> X86_VI_hammer_GPU/python/m5/internal/param_AbstractMemory.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AbstractMemory.i_init.cc -> .o
 [EMBED SW] param_AddrMapper -> X86_VI_hammer_GPU/python/m5/internal/param_AddrMapper.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AddrMapper.i_init.cc -> .o
 [EMBED SW] param_AtomicSimpleCPU -> X86_VI_hammer_GPU/python/m5/internal/param_AtomicSimpleCPU.i_init.cc
 [EMBED SW] param_BadDevice -> X86_VI_hammer_GPU/python/m5/internal/param_BadDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BadDevice.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AtomicSimpleCPU.i_init.cc -> .o
 [EMBED SW] param_BaseCPU -> X86_VI_hammer_GPU/python/m5/internal/param_BaseCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseCPU.i_init.cc -> .o
 [EMBED SW] param_BaseCache -> X86_VI_hammer_GPU/python/m5/internal/param_BaseCache.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseCache.i_init.cc -> .o
 [EMBED SW] param_BaseGarnetNetwork -> X86_VI_hammer_GPU/python/m5/internal/param_BaseGarnetNetwork.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseGarnetNetwork.i_init.cc -> .o
 [EMBED SW] param_BaseKvmCPU -> X86_VI_hammer_GPU/python/m5/internal/param_BaseKvmCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseKvmCPU.i_init.cc -> .o
 [EMBED SW] param_BasePrefetcher -> X86_VI_hammer_GPU/python/m5/internal/param_BasePrefetcher.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasePrefetcher.i_init.cc -> .o
 [EMBED SW] param_BaseSetAssoc -> X86_VI_hammer_GPU/python/m5/internal/param_BaseSetAssoc.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseSetAssoc.i_init.cc -> .o
 [EMBED SW] param_BaseSimpleCPU -> X86_VI_hammer_GPU/python/m5/internal/param_BaseSimpleCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseSimpleCPU.i_init.cc -> .o
 [EMBED SW] param_BaseTLB -> X86_VI_hammer_GPU/python/m5/internal/param_BaseTLB.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseTLB.i_init.cc -> .o
 [EMBED SW] param_BaseTags -> X86_VI_hammer_GPU/python/m5/internal/param_BaseTags.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseTags.i_init.cc -> .o
 [EMBED SW] param_BaseXBar -> X86_VI_hammer_GPU/python/m5/internal/param_BaseXBar.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseXBar.i_init.cc -> .o
 [EMBED SW] param_BasicExtLink -> X86_VI_hammer_GPU/python/m5/internal/param_BasicExtLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicExtLink.i_init.cc -> .o
 [EMBED SW] param_BasicIntLink -> X86_VI_hammer_GPU/python/m5/internal/param_BasicIntLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicIntLink.i_init.cc -> .o
 [EMBED SW] param_BasicLink -> X86_VI_hammer_GPU/python/m5/internal/param_BasicLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicLink.i_init.cc -> .o
 [EMBED SW] param_BasicPioDevice -> X86_VI_hammer_GPU/python/m5/internal/param_BasicPioDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicPioDevice.i_init.cc -> .o
 [EMBED SW] param_BasicRouter -> X86_VI_hammer_GPU/python/m5/internal/param_BasicRouter.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicRouter.i_init.cc -> .o
 [EMBED SW] param_BranchPredictor -> X86_VI_hammer_GPU/python/m5/internal/param_BranchPredictor.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BranchPredictor.i_init.cc -> .o
 [EMBED SW] param_Bridge -> X86_VI_hammer_GPU/python/m5/internal/param_Bridge.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Bridge.i_init.cc -> .o
 [EMBED SW] param_CheckerCPU -> X86_VI_hammer_GPU/python/m5/internal/param_CheckerCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CheckerCPU.i_init.cc -> .o
 [EMBED SW] param_ClockDomain -> X86_VI_hammer_GPU/python/m5/internal/param_ClockDomain.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ClockDomain.i_init.cc -> .o
 [EMBED SW] param_ClockedObject -> X86_VI_hammer_GPU/python/m5/internal/param_ClockedObject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ClockedObject.i_init.cc -> .o
 [EMBED SW] param_Cmos -> X86_VI_hammer_GPU/python/m5/internal/param_Cmos.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Cmos.i_init.cc -> .o
 [EMBED SW] param_CoherentXBar -> X86_VI_hammer_GPU/python/m5/internal/param_CoherentXBar.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CoherentXBar.i_init.cc -> .o
 [EMBED SW] param_CommMonitor -> X86_VI_hammer_GPU/python/m5/internal/param_CommMonitor.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CommMonitor.i_init.cc -> .o
 [EMBED SW] param_CopyEngine -> X86_VI_hammer_GPU/python/m5/internal/param_CopyEngine.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CopyEngine.i_init.cc -> .o
 [EMBED SW] param_CowDiskImage -> X86_VI_hammer_GPU/python/m5/internal/param_CowDiskImage.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CowDiskImage.i_init.cc -> .o
 [EMBED SW] param_CreditLink_d -> X86_VI_hammer_GPU/python/m5/internal/param_CreditLink_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CreditLink_d.i_init.cc -> .o
 [EMBED SW] param_CudaCore -> X86_VI_hammer_GPU/python/m5/internal/param_CudaCore.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CudaCore.i_init.cc -> .o
 [EMBED SW] param_CudaGPU -> X86_VI_hammer_GPU/python/m5/internal/param_CudaGPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CudaGPU.i_init.cc -> .o
 [EMBED SW] param_DMASequencer -> X86_VI_hammer_GPU/python/m5/internal/param_DMASequencer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DMASequencer.i_init.cc -> .o
 [EMBED SW] param_DMA_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_DMA_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DMA_Controller.i_init.cc -> .o
 [EMBED SW] param_DRAMCtrl -> X86_VI_hammer_GPU/python/m5/internal/param_DRAMCtrl.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DRAMCtrl.i_init.cc -> .o
 [EMBED SW] param_DVFSHandler -> X86_VI_hammer_GPU/python/m5/internal/param_DVFSHandler.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DVFSHandler.i_init.cc -> .o
 [EMBED SW] param_DerivO3CPU -> X86_VI_hammer_GPU/python/m5/internal/param_DerivO3CPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DerivO3CPU.i_init.cc -> .o
 [EMBED SW] param_DerivedClockDomain -> X86_VI_hammer_GPU/python/m5/internal/param_DerivedClockDomain.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DerivedClockDomain.i_init.cc -> .o
 [EMBED SW] param_DirectedGenerator -> X86_VI_hammer_GPU/python/m5/internal/param_DirectedGenerator.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DirectedGenerator.i_init.cc -> .o
 [EMBED SW] param_Directory_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_Directory_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Directory_Controller.i_init.cc -> .o
 [EMBED SW] param_DiskImage -> X86_VI_hammer_GPU/python/m5/internal/param_DiskImage.i_init.cc
 [EMBED SW] param_DmaDevice -> X86_VI_hammer_GPU/python/m5/internal/param_DmaDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DmaDevice.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DiskImage.i_init.cc -> .o
 [EMBED SW] param_DummyChecker -> X86_VI_hammer_GPU/python/m5/internal/param_DummyChecker.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DummyChecker.i_init.cc -> .o
 [EMBED SW] param_EmulatedDriver -> X86_VI_hammer_GPU/python/m5/internal/param_EmulatedDriver.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EmulatedDriver.i_init.cc -> .o
 [EMBED SW] param_EtherBus -> X86_VI_hammer_GPU/python/m5/internal/param_EtherBus.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherBus.i_init.cc -> .o
 [EMBED SW] param_EtherDevBase -> X86_VI_hammer_GPU/python/m5/internal/param_EtherDevBase.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevBase.i_init.cc -> .o
 [EMBED SW] param_EtherDevice -> X86_VI_hammer_GPU/python/m5/internal/param_EtherDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevice.i_init.cc -> .o
 [EMBED SW] param_EtherDump -> X86_VI_hammer_GPU/python/m5/internal/param_EtherDump.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDump.i_init.cc -> .o
 [EMBED SW] param_EtherLink -> X86_VI_hammer_GPU/python/m5/internal/param_EtherLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherLink.i_init.cc -> .o
 [EMBED SW] param_EtherObject -> X86_VI_hammer_GPU/python/m5/internal/param_EtherObject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherObject.i_init.cc -> .o
 [EMBED SW] param_EtherTap -> X86_VI_hammer_GPU/python/m5/internal/param_EtherTap.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherTap.i_init.cc -> .o
 [EMBED SW] param_ExeTracer -> X86_VI_hammer_GPU/python/m5/internal/param_ExeTracer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExeTracer.i_init.cc -> .o
 [EMBED SW] param_ExternalMaster -> X86_VI_hammer_GPU/python/m5/internal/param_ExternalMaster.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExternalMaster.i_init.cc -> .o
 [EMBED SW] param_ExternalSlave -> X86_VI_hammer_GPU/python/m5/internal/param_ExternalSlave.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExternalSlave.i_init.cc -> .o
 [EMBED SW] param_FALRU -> X86_VI_hammer_GPU/python/m5/internal/param_FALRU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FALRU.i_init.cc -> .o
 [EMBED SW] param_FUDesc -> X86_VI_hammer_GPU/python/m5/internal/param_FUDesc.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FUDesc.i_init.cc -> .o
 [EMBED SW] param_FUPool -> X86_VI_hammer_GPU/python/m5/internal/param_FUPool.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FUPool.i_init.cc -> .o
 [EMBED SW] param_FaultModel -> X86_VI_hammer_GPU/python/m5/internal/param_FaultModel.i_init.cc
 [EMBED SW] param_GPGPUSimComponentWrapper -> X86_VI_hammer_GPU/python/m5/internal/param_GPGPUSimComponentWrapper.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPGPUSimComponentWrapper.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FaultModel.i_init.cc -> .o
 [EMBED SW] param_GPUCopyDMA_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyDMA_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyDMA_Controller.i_init.cc -> .o
 [EMBED SW] param_GPUCopyEngine -> X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyEngine.i_init.cc
 [EMBED SW] param_GPUL1Cache_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_GPUL1Cache_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUL1Cache_Controller.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyEngine.i_init.cc -> .o
 [EMBED SW] param_GPUL2Cache_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_GPUL2Cache_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUL2Cache_Controller.i_init.cc -> .o
 [EMBED SW] param_GarnetExtLink -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink.i_init.cc -> .o
 [EMBED SW] param_GarnetExtLink_d -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink_d.i_init.cc -> .o
 [EMBED SW] param_GarnetIntLink -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink.i_init.cc -> .o
 [EMBED SW] param_GarnetIntLink_d -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink_d.i_init.cc -> .o
 [EMBED SW] param_GarnetNetwork -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork.i_init.cc -> .o
 [EMBED SW] param_GarnetNetworkInterface -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface.i_init.cc -> .o
 [EMBED SW] param_GarnetNetworkInterface_d -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface_d.i_init.cc -> .o
 [EMBED SW] param_GarnetNetwork_d -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork_d.i_init.cc -> .o
 [EMBED SW] param_GarnetRouter -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter.i_init.cc -> .o
 [EMBED SW] param_GarnetRouter_d -> X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter_d.i_init.cc -> .o
 [EMBED SW] param_I8042 -> X86_VI_hammer_GPU/python/m5/internal/param_I8042.i_init.cc
 [EMBED SW] param_I82094AA -> X86_VI_hammer_GPU/python/m5/internal/param_I82094AA.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I82094AA.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8042.i_init.cc -> .o
 [EMBED SW] param_I8237 -> X86_VI_hammer_GPU/python/m5/internal/param_I8237.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8237.i_init.cc -> .o
 [EMBED SW] param_I8254 -> X86_VI_hammer_GPU/python/m5/internal/param_I8254.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8254.i_init.cc -> .o
 [EMBED SW] param_I8259 -> X86_VI_hammer_GPU/python/m5/internal/param_I8259.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8259.i_init.cc -> .o
 [EMBED SW] param_IGbE -> X86_VI_hammer_GPU/python/m5/internal/param_IGbE.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IGbE.i_init.cc -> .o
 [EMBED SW] param_IdeController -> X86_VI_hammer_GPU/python/m5/internal/param_IdeController.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IdeController.i_init.cc -> .o
 [EMBED SW] param_IdeDisk -> X86_VI_hammer_GPU/python/m5/internal/param_IdeDisk.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IdeDisk.i_init.cc -> .o
 [EMBED SW] param_InstTracer -> X86_VI_hammer_GPU/python/m5/internal/param_InstTracer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_InstTracer.i_init.cc -> .o
 [EMBED SW] param_IntelTrace -> X86_VI_hammer_GPU/python/m5/internal/param_IntelTrace.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IntelTrace.i_init.cc -> .o
 [EMBED SW] param_IntrControl -> X86_VI_hammer_GPU/python/m5/internal/param_IntrControl.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IntrControl.i_init.cc -> .o
 [EMBED SW] param_InvalidateGenerator -> X86_VI_hammer_GPU/python/m5/internal/param_InvalidateGenerator.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_InvalidateGenerator.i_init.cc -> .o
 [EMBED SW] param_IsaFake -> X86_VI_hammer_GPU/python/m5/internal/param_IsaFake.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IsaFake.i_init.cc -> .o
 [EMBED SW] param_KvmVM -> X86_VI_hammer_GPU/python/m5/internal/param_KvmVM.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_KvmVM.i_init.cc -> .o
 [EMBED SW] param_L1Cache_Controller -> X86_VI_hammer_GPU/python/m5/internal/param_L1Cache_Controller.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_L1Cache_Controller.i_init.cc -> .o
 [EMBED SW] param_LRU -> X86_VI_hammer_GPU/python/m5/internal/param_LRU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LRU.i_init.cc -> .o
 [EMBED SW] param_LinuxX86System -> X86_VI_hammer_GPU/python/m5/internal/param_LinuxX86System.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LinuxX86System.i_init.cc -> .o
 [EMBED SW] param_LiveProcess -> X86_VI_hammer_GPU/python/m5/internal/param_LiveProcess.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LiveProcess.i_init.cc -> .o
 [EMBED SW] param_MemChecker -> X86_VI_hammer_GPU/python/m5/internal/param_MemChecker.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemChecker.i_init.cc -> .o
 [EMBED SW] param_MemCheckerMonitor -> X86_VI_hammer_GPU/python/m5/internal/param_MemCheckerMonitor.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemCheckerMonitor.i_init.cc -> .o
 [EMBED SW] param_MemObject -> X86_VI_hammer_GPU/python/m5/internal/param_MemObject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemObject.i_init.cc -> .o
 [EMBED SW] param_MemTest -> X86_VI_hammer_GPU/python/m5/internal/param_MemTest.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemTest.i_init.cc -> .o
 [EMBED SW] param_NSGigE -> X86_VI_hammer_GPU/python/m5/internal/param_NSGigE.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NSGigE.i_init.cc -> .o
 [EMBED SW] param_NativeTrace -> X86_VI_hammer_GPU/python/m5/internal/param_NativeTrace.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NativeTrace.i_init.cc -> .o
 [EMBED SW] param_NetworkLink -> X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink.i_init.cc -> .o
 [EMBED SW] param_NetworkLink_d -> X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink_d.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink_d.i_init.cc -> .o
 [EMBED SW] param_NetworkTest -> X86_VI_hammer_GPU/python/m5/internal/param_NetworkTest.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkTest.i_init.cc -> .o
 [EMBED SW] param_NoncoherentXBar -> X86_VI_hammer_GPU/python/m5/internal/param_NoncoherentXBar.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NoncoherentXBar.i_init.cc -> .o
 [EMBED SW] param_O3Checker -> X86_VI_hammer_GPU/python/m5/internal/param_O3Checker.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_O3Checker.i_init.cc -> .o
 [EMBED SW] param_OpDesc -> X86_VI_hammer_GPU/python/m5/internal/param_OpDesc.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_OpDesc.i_init.cc -> .o
 [EMBED SW] param_Pc -> X86_VI_hammer_GPU/python/m5/internal/param_Pc.i_init.cc
 [EMBED SW] param_PcSpeaker -> X86_VI_hammer_GPU/python/m5/internal/param_PcSpeaker.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PcSpeaker.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Pc.i_init.cc -> .o
 [EMBED SW] param_PciConfigAll -> X86_VI_hammer_GPU/python/m5/internal/param_PciConfigAll.i_init.cc
 [EMBED SW] param_PciDevice -> X86_VI_hammer_GPU/python/m5/internal/param_PciDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciDevice.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciConfigAll.i_init.cc -> .o
 [EMBED SW] param_PciVirtIO -> X86_VI_hammer_GPU/python/m5/internal/param_PciVirtIO.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciVirtIO.i_init.cc -> .o
 [EMBED SW] param_PioDevice -> X86_VI_hammer_GPU/python/m5/internal/param_PioDevice.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PioDevice.i_init.cc -> .o
 [EMBED SW] param_Platform -> X86_VI_hammer_GPU/python/m5/internal/param_Platform.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Platform.i_init.cc -> .o
 [EMBED SW] param_Prefetcher -> X86_VI_hammer_GPU/python/m5/internal/param_Prefetcher.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Prefetcher.i_init.cc -> .o
 [EMBED SW] param_ProbeListenerObject -> X86_VI_hammer_GPU/python/m5/internal/param_ProbeListenerObject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ProbeListenerObject.i_init.cc -> .o
 [EMBED SW] param_Process -> X86_VI_hammer_GPU/python/m5/internal/param_Process.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Process.i_init.cc -> .o
 [EMBED SW] param_QueuedPrefetcher -> X86_VI_hammer_GPU/python/m5/internal/param_QueuedPrefetcher.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_QueuedPrefetcher.i_init.cc -> .o
 [EMBED SW] param_RandomRepl -> X86_VI_hammer_GPU/python/m5/internal/param_RandomRepl.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RandomRepl.i_init.cc -> .o
 [EMBED SW] param_RangeAddrMapper -> X86_VI_hammer_GPU/python/m5/internal/param_RangeAddrMapper.i_init.cc
 [EMBED SW] param_RawDiskImage -> X86_VI_hammer_GPU/python/m5/internal/param_RawDiskImage.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RawDiskImage.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RangeAddrMapper.i_init.cc -> .o
 [EMBED SW] param_Root -> X86_VI_hammer_GPU/python/m5/internal/param_Root.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Root.i_init.cc -> .o
 [EMBED SW] param_RubyCache -> X86_VI_hammer_GPU/python/m5/internal/param_RubyCache.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyCache.i_init.cc -> .o
 [EMBED SW] param_RubyController -> X86_VI_hammer_GPU/python/m5/internal/param_RubyController.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyController.i_init.cc -> .o
 [EMBED SW] param_RubyDirectedTester -> X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectedTester.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectedTester.i_init.cc -> .o
 [EMBED SW] param_RubyDirectoryMemory -> X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectoryMemory.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectoryMemory.i_init.cc -> .o
 [EMBED SW] param_RubyMemoryControl -> X86_VI_hammer_GPU/python/m5/internal/param_RubyMemoryControl.i_init.cc
 [EMBED SW] param_RubyNetwork -> X86_VI_hammer_GPU/python/m5/internal/param_RubyNetwork.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyNetwork.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyMemoryControl.i_init.cc -> .o
 [EMBED SW] param_RubyPort -> X86_VI_hammer_GPU/python/m5/internal/param_RubyPort.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyPort.i_init.cc -> .o
 [EMBED SW] param_RubyPortProxy -> X86_VI_hammer_GPU/python/m5/internal/param_RubyPortProxy.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyPortProxy.i_init.cc -> .o
 [EMBED SW] param_RubyRegionBuffer -> X86_VI_hammer_GPU/python/m5/internal/param_RubyRegionBuffer.i_init.cc
 [EMBED SW] param_RubySequencer -> X86_VI_hammer_GPU/python/m5/internal/param_RubySequencer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubySequencer.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyRegionBuffer.i_init.cc -> .o
 [EMBED SW] param_RubySystem -> X86_VI_hammer_GPU/python/m5/internal/param_RubySystem.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubySystem.i_init.cc -> .o
 [EMBED SW] param_RubyTester -> X86_VI_hammer_GPU/python/m5/internal/param_RubyTester.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyTester.i_init.cc -> .o
 [EMBED SW] param_RubyWireBuffer -> X86_VI_hammer_GPU/python/m5/internal/param_RubyWireBuffer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyWireBuffer.i_init.cc -> .o
 [EMBED SW] param_SeriesRequestGenerator -> X86_VI_hammer_GPU/python/m5/internal/param_SeriesRequestGenerator.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SeriesRequestGenerator.i_init.cc -> .o
 [EMBED SW] param_ShaderLSQ -> X86_VI_hammer_GPU/python/m5/internal/param_ShaderLSQ.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderLSQ.i_init.cc -> .o
 [EMBED SW] param_ShaderMMU -> X86_VI_hammer_GPU/python/m5/internal/param_ShaderMMU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderMMU.i_init.cc -> .o
 [EMBED SW] param_ShaderTLB -> X86_VI_hammer_GPU/python/m5/internal/param_ShaderTLB.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderTLB.i_init.cc -> .o
 [EMBED SW] param_SimObject -> X86_VI_hammer_GPU/python/m5/internal/param_SimObject.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimObject.i_init.cc -> .o
 [EMBED SW] param_SimPoint -> X86_VI_hammer_GPU/python/m5/internal/param_SimPoint.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimPoint.i_init.cc -> .o
 [EMBED SW] param_SimpleDisk -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleDisk.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleDisk.i_init.cc -> .o
 [EMBED SW] param_SimpleExtLink -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleExtLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleExtLink.i_init.cc -> .o
 [EMBED SW] param_SimpleIntLink -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleIntLink.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleIntLink.i_init.cc -> .o
 [EMBED SW] param_SimpleMemory -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleMemory.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleMemory.i_init.cc -> .o
 [EMBED SW] param_SimpleNetwork -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleNetwork.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleNetwork.i_init.cc -> .o
 [EMBED SW] param_SimpleTrace -> X86_VI_hammer_GPU/python/m5/internal/param_SimpleTrace.i_init.cc
 [EMBED SW] param_Sinic -> X86_VI_hammer_GPU/python/m5/internal/param_Sinic.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Sinic.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleTrace.i_init.cc -> .o
 [EMBED SW] param_SnoopFilter -> X86_VI_hammer_GPU/python/m5/internal/param_SnoopFilter.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SnoopFilter.i_init.cc -> .o
 [EMBED SW] param_SouthBridge -> X86_VI_hammer_GPU/python/m5/internal/param_SouthBridge.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SouthBridge.i_init.cc -> .o
 [EMBED SW] param_SrcClockDomain -> X86_VI_hammer_GPU/python/m5/internal/param_SrcClockDomain.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SrcClockDomain.i_init.cc -> .o
 [EMBED SW] param_StackDistCalc -> X86_VI_hammer_GPU/python/m5/internal/param_StackDistCalc.i_init.cc
 [EMBED SW] param_StridePrefetcher -> X86_VI_hammer_GPU/python/m5/internal/param_StridePrefetcher.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_StridePrefetcher.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_StackDistCalc.i_init.cc -> .o
 [EMBED SW] param_SubSystem -> X86_VI_hammer_GPU/python/m5/internal/param_SubSystem.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SubSystem.i_init.cc -> .o
 [EMBED SW] param_Switch -> X86_VI_hammer_GPU/python/m5/internal/param_Switch.i_init.cc
 [EMBED SW] param_System -> X86_VI_hammer_GPU/python/m5/internal/param_System.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_System.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Switch.i_init.cc -> .o
 [EMBED SW] param_TaggedPrefetcher -> X86_VI_hammer_GPU/python/m5/internal/param_TaggedPrefetcher.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TaggedPrefetcher.i_init.cc -> .o
 [EMBED SW] param_Terminal -> X86_VI_hammer_GPU/python/m5/internal/param_Terminal.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Terminal.i_init.cc -> .o
 [EMBED SW] param_TickedObject -> X86_VI_hammer_GPU/python/m5/internal/param_TickedObject.i_init.cc
 [EMBED SW] param_TimingExpr -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExpr.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExpr.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TickedObject.i_init.cc -> .o
 [EMBED SW] param_TimingExprBin -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprBin.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprBin.i_init.cc -> .o
 [EMBED SW] param_TimingExprIf -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprIf.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprIf.i_init.cc -> .o
 [EMBED SW] param_TimingExprLet -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLet.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLet.i_init.cc -> .o
 [EMBED SW] param_TimingExprLiteral -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLiteral.i_init.cc
 [EMBED SW] param_TimingExprReadIntReg -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprReadIntReg.i_init.cc
 [EMBED SW] param_TimingExprRef -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprRef.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprRef.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprReadIntReg.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLiteral.i_init.cc -> .o
 [EMBED SW] param_TimingExprSrcReg -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprSrcReg.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprSrcReg.i_init.cc -> .o
 [EMBED SW] param_TimingExprUn -> X86_VI_hammer_GPU/python/m5/internal/param_TimingExprUn.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprUn.i_init.cc -> .o
 [EMBED SW] param_TimingSimpleCPU -> X86_VI_hammer_GPU/python/m5/internal/param_TimingSimpleCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingSimpleCPU.i_init.cc -> .o
 [EMBED SW] param_TrafficGen -> X86_VI_hammer_GPU/python/m5/internal/param_TrafficGen.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TrafficGen.i_init.cc -> .o
 [EMBED SW] param_Uart -> X86_VI_hammer_GPU/python/m5/internal/param_Uart.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Uart.i_init.cc -> .o
 [EMBED SW] param_Uart8250 -> X86_VI_hammer_GPU/python/m5/internal/param_Uart8250.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Uart8250.i_init.cc -> .o
 [EMBED SW] param_VirtIO9PBase -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PBase.i_init.cc
 [EMBED SW] param_VirtIO9PDiod -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PDiod.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PDiod.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PBase.i_init.cc -> .o
 [EMBED SW] param_VirtIO9PProxy -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PProxy.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PProxy.i_init.cc -> .o
 [EMBED SW] param_VirtIO9PSocket -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket.i_init.cc -> .o
 [EMBED SW] param_VirtIOBlock -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.i_init.cc -> .o
 [EMBED SW] param_VirtIOConsole -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.i_init.cc -> .o
 [EMBED SW] param_VirtIODeviceBase -> X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase.i_init.cc -> .o
 [EMBED SW] param_VncInput -> X86_VI_hammer_GPU/python/m5/internal/param_VncInput.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncInput.i_init.cc -> .o
 [EMBED SW] param_VncServer -> X86_VI_hammer_GPU/python/m5/internal/param_VncServer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncServer.i_init.cc -> .o
 [EMBED SW] param_VoltageDomain -> X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain.i_init.cc -> .o
 [EMBED SW] param_X86ACPIRSDP -> X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP.i_init.cc -> .o
 [EMBED SW] param_X86ACPIRSDT -> X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT.i_init.cc -> .o
 [EMBED SW] param_X86ACPISysDescTable -> X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable.i_init.cc -> .o
 [EMBED SW] param_X86ACPIXSDT -> X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT.i_init.cc -> .o
 [EMBED SW] param_X86E820Entry -> X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry.i_init.cc -> .o
 [EMBED SW] param_X86E820Table -> X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table.i_init.cc -> .o
 [EMBED SW] param_X86ISA -> X86_VI_hammer_GPU/python/m5/internal/param_X86ISA.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ISA.i_init.cc -> .o
 [EMBED SW] param_X86IntLine -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.i_init.cc
 [EMBED SW] param_X86IntSinkPin -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.i_init.cc -> .o
 [EMBED SW] param_X86IntSourcePin -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPAddrSpaceMapping -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPBaseConfigEntry -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPBus -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPBusHierarchy -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPCompatAddrSpaceMod -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPConfigTable -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPExtConfigEntry -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPFloatingPointer -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPIOAPIC -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPIOIntAssignment -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.i_init.cc
 [EMBED SW] param_X86IntelMPLocalIntAssignment -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.i_init.cc -> .o
 [EMBED SW] param_X86IntelMPProcessor -> X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.i_init.cc
 [EMBED SW] param_X86KvmCPU -> X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.i_init.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.i_init.cc -> .o
 [EMBED SW] param_X86LocalApic -> X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic.i_init.cc -> .o
 [EMBED SW] param_X86NativeTrace -> X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.i_init.cc -> .o
 [EMBED SW] param_X86PagetableWalker -> X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker.i_init.cc -> .o
 [EMBED SW] param_X86SMBiosBiosInformation -> X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.i_init.cc -> .o
 [EMBED SW] param_X86SMBiosSMBiosStructure -> X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure.i_init.cc -> .o
 [EMBED SW] param_X86SMBiosSMBiosTable -> X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable.i_init.cc -> .o
 [EMBED SW] param_X86System -> X86_VI_hammer_GPU/python/m5/internal/param_X86System.i_init.cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86System.i_init.cc -> .o
 [EMBED SW] param_X86TLB -> X86_VI_hammer_GPU/python/m5/internal/param_X86TLB.i_init.cc
 [     CXX] X86_VI_hammer_GPU/proto/packet.pb.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86TLB.i_init.cc -> .o
 [ TRACING]  -> X86_VI_hammer_GPU/debug/flags.cc
 [     CXX] X86_VI_hammer_GPU/debug/flags.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Device.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Device.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/BadDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/BadDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/CopyEngine.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/CopyEngine.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/DiskImage.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/DiskImage.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Ethernet.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Ethernet.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Ide.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Ide.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Pci.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Pci.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Platform.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Platform.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/SimpleDisk.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/SimpleDisk.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Terminal.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Terminal.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/Uart.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/Uart.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/Pc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/Pc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/SouthBridge.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/SouthBridge.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/Cmos.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/I8259.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/I8259.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/dev/x86/Cmos.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/I8254.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/I8254.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/I8237.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/I8237.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/I8042.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/I8042.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/PcSpeaker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/PcSpeaker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/I82094AA.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/I82094AA.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/x86/X86IntPin.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/x86/X86IntPin.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/virtio/VirtIO.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/virtio/VirtIO.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/virtio/VirtIOConsole.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/dev/virtio/VirtIOBlock.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/virtio/VirtIOBlock.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/dev/virtio/VirtIOConsole.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/dev/virtio/VirtIO9P.py -> .cc
 [     CXX] X86_VI_hammer_GPU/dev/virtio/VirtIO9P.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/base/vnc/Vnc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/base/vnc/Vnc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/importer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/importer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/__init__.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/__init__.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/SimObject.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/config.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/config.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/core.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/core.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/debug.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/debug.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/SimObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/event.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/event.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/main.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/main.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/options.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/options.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/params.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/proxy.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/proxy.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/simulate.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/ticks.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/ticks.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/simulate.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/params.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/trace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/trace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/objects/__init__.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/objects/__init__.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/stats/__init__.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/__init__.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/stats/__init__.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/util/__init__.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/attrdict.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/attrdict.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/code_formatter.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/code_formatter.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/convert.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/convert.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/dot_writer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/dot_writer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/grammar.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/jobfile.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/multidict.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/grammar.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/util/jobfile.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/util/multidict.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/orderdict.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/region.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/region.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/util/orderdict.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/smartdict.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/smartdict.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/sorteddict.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/sorteddict.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/util/terminal.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/util/terminal.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/core.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/swig/debug.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/core.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/swig/debug.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/drain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/drain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/event.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/swig/pyobject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/pyobject.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/swig/event.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/range.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/range.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/serialize.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/serialize.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/stats.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/stats.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/swig/trace.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/__init__.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/swig/trace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/params.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/__init__.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/params.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/unittest/stattestmain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/unittest/stattestmain.py.cc -> .o
 [    SWIG] X86_VI_hammer_GPU/unittest/stattest.i -> _wrap.cc, .py
 [EMBED PY] X86_VI_hammer_GPU/mem/CommMonitor.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/mem/AbstractMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/AbstractMemory.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/mem/CommMonitor.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/AddrMapper.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/AddrMapper.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/Bridge.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/Bridge.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/DRAMCtrl.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/mem/ExternalMaster.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/DRAMCtrl.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/mem/ExternalMaster.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ExternalSlave.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ExternalSlave.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/MemObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/MemObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/unittest/stattest.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/mem/SimpleMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/SimpleMemory.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/unittest/stattest.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/StackDistCalc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/StackDistCalc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/XBar.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/XBar.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/MemChecker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/MemChecker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/Cache.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/Cache.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/DirectoryMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/DirectoryMemory.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/RubyMemoryControl.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/RubyMemoryControl.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/RubyPrefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/RubyPrefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/WireBuffer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/WireBuffer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/structures/RegionBuffer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/structures/RegionBuffer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/system/Sequencer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/system/Sequencer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/system/RubySystem.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/system/RubySystem.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/slicc_interface/Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/slicc_interface/Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/BasicLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/BasicLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/BasicRouter.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/BasicRouter.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/Network.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/Network.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/simple/SimpleLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/simple/SimpleLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/simple/SimpleNetwork.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/simple/SimpleNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/fault_model/FaultModel.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/garnet/BaseGarnetNetwork.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/garnet/flexible-pipeline/GarnetLink.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/garnet/BaseGarnetNetwork.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/fault_model/FaultModel.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/garnet/flexible-pipeline/GarnetNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/cache/BaseCache.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/cache/BaseCache.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/cache/tags/Tags.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/cache/tags/Tags.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/cache/prefetch/Prefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/cache/prefetch/Prefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/DMA_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/DMA_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/Directory_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/Directory_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/GPUCopyDMA_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/GPUCopyDMA_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/GPUL1Cache_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/GPUL1Cache_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/GPUL2Cache_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/GPUL2Cache_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/mem/protocol/L1Cache_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/mem/protocol/L1Cache_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/X86ISA.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/X86ISA.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/X86LocalApic.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/X86LocalApic.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/X86NativeTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/X86NativeTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/X86System.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/X86System.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/X86TLB.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/bios/E820.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/bios/SMBios.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/bios/SMBios.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/bios/E820.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/X86TLB.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/bios/IntelMP.py -> .cc
 [     CXX] X86_VI_hammer_GPU/arch/x86/bios/IntelMP.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/arch/x86/bios/ACPI.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/sim/BaseTLB.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/BaseTLB.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/bios/ACPI.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/ClockedObject.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/sim/TickedObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/TickedObject.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/sim/ClockedObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/Root.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/Root.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/ClockDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/ClockDomain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/VoltageDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/VoltageDomain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/System.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/System.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/DVFSHandler.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/DVFSHandler.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/SubSystem.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/SubSystem.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/InstTracer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/InstTracer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/Process.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/Process.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/sim/probe/Probe.py -> .cc
 [     CXX] X86_VI_hammer_GPU/sim/probe/Probe.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/CheckerCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/CheckerCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/BaseCPU.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/cpu/FuncUnit.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/FuncUnit.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/cpu/BaseCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/ExeTracer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/ExeTracer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/IntelTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/IntelTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/IntrControl.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/IntrControl.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/NativeTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/NativeTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/TimingExpr.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/TimingExpr.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/DummyChecker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/DummyChecker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/StaticInstFlags.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/StaticInstFlags.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/simple/AtomicSimpleCPU.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/cpu/simple/TimingSimpleCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/simple/TimingSimpleCPU.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/cpu/simple/AtomicSimpleCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/simple/BaseSimpleCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/simple/BaseSimpleCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/simple/probes/SimPoint.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/simple/probes/SimPoint.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/pred/BranchPredictor.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/pred/BranchPredictor.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/kvm/KvmVM.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/kvm/KvmVM.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/kvm/BaseKvmCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/kvm/BaseKvmCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/kvm/X86KvmCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/kvm/X86KvmCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/o3/FUPool.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/o3/FUPool.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/o3/FuncUnitConfig.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/o3/FuncUnitConfig.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/o3/O3CPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/o3/O3CPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/o3/O3Checker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/o3/O3Checker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/o3/probe/SimpleTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/o3/probe/SimpleTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/testers/networktest/NetworkTest.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/testers/networktest/NetworkTest.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/testers/directedtest/RubyDirectedTester.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/testers/directedtest/RubyDirectedTester.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/testers/traffic_gen/TrafficGen.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/testers/traffic_gen/TrafficGen.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/testers/memtest/MemTest.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/testers/memtest/MemTest.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/cpu/testers/rubytest/RubyTester.py -> .cc
 [     CXX] X86_VI_hammer_GPU/cpu/testers/rubytest/RubyTester.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/ShaderLSQ.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/ShaderLSQ.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/ShaderTLB.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/ShaderTLB.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/GPUCopyEngine.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/GPUCopyEngine.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/ShaderMMU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/ShaderMMU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/gpgpu-sim/CudaCore.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/gpgpu-sim/CudaCore.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/src/gpu/gpgpu-sim/CudaGPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/src/gpu/gpgpu-sim/CudaGPU.py.cc -> .o
 [ DEFINES]  -> X86_VI_hammer_GPU/python/m5/defines.py
 [EMBED PY] X86_VI_hammer_GPU/python/m5/defines.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/defines.py.cc -> .o
 [    INFO] COPYING, LICENSE, README -> X86_VI_hammer_GPU/python/m5/info.py
 [EMBED PY] X86_VI_hammer_GPU/python/m5/info.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/info.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/AbstractMemory_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/AddrRange_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/AbstractMemory_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/BasicExtLink_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/AddrRange_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/BasicIntLink_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicExtLink_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/BasicRouter_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Characteristic_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicIntLink_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Clock_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/BasicRouter_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Clock_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Characteristic_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/ClockedObject_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/ClockedObject_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Counter_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Counter_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/CreditLink_d_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/EmulatedDriver_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/EmulatedDriver_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/CreditLink_d_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/ExtCharacteristic_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/ExtCharacteristic_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/FUDesc_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/FUDesc_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Float_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Float_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/IdeDisk_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Int_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Int_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/IdeDisk_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_d_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/NetworkLink_d_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/OpDesc_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/OpDesc_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Process_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Process_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/SrcClockDomain_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/SrcClockDomain_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/String_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/String_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/TimingExpr_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/TimingExpr_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/Voltage_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86ACPISysDescTable_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/Voltage_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86ACPISysDescTable_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86E820Entry_vector.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86ISA_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86ISA_vector.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86E820Entry_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPBaseConfigEntry_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPBaseConfigEntry_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPExtConfigEntry_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86IntelMPExtConfigEntry_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86SMBiosSMBiosStructure_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86SMBiosSMBiosStructure_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/X86TLB_vector.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/X86TLB_vector.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_AddrMap.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_AddrMap.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_Characteristic.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_Characteristic.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_Enum.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_Enum.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_ExtCharacteristic.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_ExtCharacteristic.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_IdeID.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_IdeID.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_MemSched.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_MemSched.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_MemoryMode.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_MemoryMode.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_OpClass.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_OpClass.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_PageManage.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_StaticInstFlags.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_PageManage.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_StaticInstFlags.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_TimingExprOp.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86I8259CascadeMode.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86I8259CascadeMode.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_TimingExprOp.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPAddressType.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPAddressType.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPInterruptType.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPInterruptType.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPPolarity.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPPolarity.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPRangeList.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPRangeList.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPTriggerMode.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/enum_X86IntelMPTriggerMode.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_AbstractMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AbstractMemory.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_AddrMapper.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AddrMapper.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_AtomicSimpleCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_AtomicSimpleCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BadDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BadDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseCache.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseGarnetNetwork.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseCache.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseGarnetNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseKvmCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseKvmCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasePrefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasePrefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseSetAssoc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseSetAssoc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseSimpleCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseSimpleCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseTLB.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseTLB.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseTags.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseTags.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BaseXBar.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BaseXBar.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasicExtLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicExtLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasicIntLink.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasicLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicLink.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicIntLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasicPioDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicPioDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BasicRouter.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BasicRouter.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_BranchPredictor.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Bridge.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_BranchPredictor.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Bridge.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CheckerCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CheckerCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ClockDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ClockDomain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ClockedObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ClockedObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Cmos.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Cmos.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CoherentXBar.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CoherentXBar.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CommMonitor.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CopyEngine.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CopyEngine.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CommMonitor.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CowDiskImage.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CreditLink_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CreditLink_d.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CowDiskImage.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CudaCore.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CudaCore.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_CudaGPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_CudaGPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DMASequencer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DMASequencer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DMA_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DMA_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DRAMCtrl.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DVFSHandler.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DRAMCtrl.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DVFSHandler.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DerivO3CPU.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DerivedClockDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DerivedClockDomain.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DerivO3CPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DirectedGenerator.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Directory_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DirectedGenerator.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DiskImage.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DiskImage.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Directory_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DmaDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DmaDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_DummyChecker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_DummyChecker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EmulatedDriver.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EmulatedDriver.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherBus.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherBus.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevBase.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevBase.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherDump.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherDump.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherLink.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherObject.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_EtherTap.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ExeTracer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherObject.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherLink.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExeTracer.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_EtherTap.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ExternalMaster.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ExternalSlave.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_FALRU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FALRU.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExternalSlave.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ExternalMaster.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_FUDesc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FUDesc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_FUPool.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FUPool.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_FaultModel.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_FaultModel.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GPGPUSimComponentWrapper.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPGPUSimComponentWrapper.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyDMA_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyDMA_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyEngine.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUCopyEngine.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GPUL1Cache_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUL1Cache_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GPUL2Cache_Controller.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GPUL2Cache_Controller.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetExtLink_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetIntLink_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetworkInterface_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetNetwork_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter_d.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_GarnetRouter_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_I8042.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8042.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_I82094AA.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I82094AA.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_I8237.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8237.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_I8254.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8254.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_I8259.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_I8259.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IGbE.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IdeController.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IdeController.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IGbE.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IdeDisk.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IdeDisk.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_InstTracer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_InstTracer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IntelTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IntelTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IntrControl.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IntrControl.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_InvalidateGenerator.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_InvalidateGenerator.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_IsaFake.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_KvmVM.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_KvmVM.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_IsaFake.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_L1Cache_Controller.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_L1Cache_Controller.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_LRU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LRU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_LinuxX86System.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LinuxX86System.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_LiveProcess.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_LiveProcess.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_MemChecker.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_MemCheckerMonitor.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemCheckerMonitor.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemChecker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_MemObject.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_MemTest.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemTest.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_MemObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NSGigE.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NativeTrace.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NSGigE.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NativeTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink_d.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NetworkTest.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkTest.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NetworkLink_d.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_NoncoherentXBar.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_NoncoherentXBar.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_O3Checker.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_O3Checker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_OpDesc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_OpDesc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Pc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Pc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_PcSpeaker.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_PciConfigAll.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PcSpeaker.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciConfigAll.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_PciDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_PciVirtIO.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PciVirtIO.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_PioDevice.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_PioDevice.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Platform.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Prefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Platform.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Prefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ProbeListenerObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ProbeListenerObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Process.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Process.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_QueuedPrefetcher.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RandomRepl.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RandomRepl.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_QueuedPrefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RangeAddrMapper.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RangeAddrMapper.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RawDiskImage.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RawDiskImage.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Root.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyCache.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyCache.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Root.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyController.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyController.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectedTester.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectedTester.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectoryMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyDirectoryMemory.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyMemoryControl.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyMemoryControl.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyNetwork.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyPort.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyPort.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyPortProxy.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyPortProxy.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyRegionBuffer.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubySequencer.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubySystem.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyRegionBuffer.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubySystem.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubySequencer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyTester.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_RubyWireBuffer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyTester.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_RubyWireBuffer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SeriesRequestGenerator.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SeriesRequestGenerator.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ShaderLSQ.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderLSQ.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ShaderMMU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderMMU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_ShaderTLB.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_ShaderTLB.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimPoint.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimPoint.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleDisk.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleDisk.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleExtLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleExtLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleIntLink.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleIntLink.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleMemory.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleMemory.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleNetwork.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleNetwork.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SimpleTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SimpleTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Sinic.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Sinic.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SnoopFilter.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SnoopFilter.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SouthBridge.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SouthBridge.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SrcClockDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SrcClockDomain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_StackDistCalc.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_StackDistCalc.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_StridePrefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_StridePrefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_SubSystem.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_SubSystem.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Switch.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Switch.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_System.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TaggedPrefetcher.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_System.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Terminal.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Terminal.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TaggedPrefetcher.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TickedObject.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TickedObject.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExpr.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExpr.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprBin.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprBin.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprIf.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprIf.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLet.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLet.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLiteral.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprLiteral.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprReadIntReg.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprReadIntReg.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprRef.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprRef.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprSrcReg.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprSrcReg.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprUn.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingExprUn.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TimingSimpleCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TimingSimpleCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_TrafficGen.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_TrafficGen.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Uart.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Uart.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_Uart8250.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_Uart8250.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PBase.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PDiod.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PDiod.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PBase.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PProxy.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PSocket.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIO9PProxy.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOBlock.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIOConsole.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VirtIODeviceBase.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VncInput.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncInput.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VncServer.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VncServer.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_VoltageDomain.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDP.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIRSDT.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPISysDescTable.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ACPIXSDT.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Entry.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86E820Table.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86ISA.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86ISA.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntLine.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSinkPin.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntSourcePin.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPAddrSpaceMapping.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBaseConfigEntry.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBus.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPBusHierarchy.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPCompatAddrSpaceMod.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPConfigTable.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPExtConfigEntry.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPFloatingPointer.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOAPIC.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPIOIntAssignment.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPLocalIntAssignment.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86IntelMPProcessor.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86KvmCPU.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86LocalApic.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86NativeTrace.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker.py -> .cc
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosBiosInformation.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86PagetableWalker.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosStructure.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86SMBiosSMBiosTable.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86System.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86System.py.cc -> .o
 [EMBED PY] X86_VI_hammer_GPU/python/m5/internal/param_X86TLB.py -> .cc
 [     CXX] X86_VI_hammer_GPU/python/m5/internal/param_X86TLB.py.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/generated/decoder.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/generated/inst-constrs.cc -> .o
 [     CXX] X86_VI_hammer_GPU/arch/x86/generated/generic_cpu_exec.cc -> .o
 [    SHCC] libelf/elf_begin.c -> .os
 [    SHCC] libelf/elf_cntl.c -> .os
 [    SHCC] libelf/elf_data.c -> .os
 [    SHCC] libelf/elf_end.c -> .os
 [    SHCC] libelf/elf_errmsg.c -> .os
 [    SHCC] libelf/elf_errno.c -> .os
 [    SHCC] libelf/elf_fill.c -> .os
 [    SHCC] libelf/elf_flag.c -> .os
 [    SHCC] libelf/elf_getarhdr.c -> .os
 [    SHCC] libelf/elf_getarsym.c -> .os
 [    SHCC] libelf/elf_getbase.c -> .os
 [    SHCC] libelf/elf_getident.c -> .os
 [    SHCC] libelf/elf_hash.c -> .os
 [    SHCC] libelf/elf_kind.c -> .os
 [    SHCC] libelf/elf_memory.c -> .os
 [    SHCC] libelf/elf_next.c -> .os
 [    SHCC] libelf/elf_phnum.c -> .os
 [    SHCC] libelf/elf_rand.c -> .os
 [    SHCC] libelf/elf_rawfile.c -> .os
 [    SHCC] libelf/elf_scn.c -> .os
 [    SHCC] libelf/elf_shnum.c -> .os
 [    SHCC] libelf/elf_shstrndx.c -> .os
 [    SHCC] libelf/elf_strptr.c -> .os
 [    SHCC] libelf/elf_update.c -> .os
 [    SHCC] libelf/elf_version.c -> .os
 [    SHCC] libelf/gelf_checksum.c -> .os
 [    SHCC] libelf/gelf_dyn.c -> .os
 [    SHCC] libelf/gelf_ehdr.c -> .os
 [    SHCC] libelf/gelf_fsize.c -> .os
 [    SHCC] libelf/gelf_getclass.c -> .os
 [    SHCC] libelf/gelf_phdr.c -> .os
 [    SHCC] libelf/gelf_rel.c -> .os
 [    SHCC] libelf/gelf_rela.c -> .os
 [    SHCC] libelf/gelf_shdr.c -> .os
 [    SHCC] libelf/gelf_sym.c -> .os
 [    SHCC] libelf/gelf_symshndx.c -> .os
 [    SHCC] libelf/gelf_xlate.c -> .os
 [    SHCC] libelf/libelf.c -> .os
 [    SHCC] libelf/libelf_align.c -> .os
 [    SHCC] libelf/libelf_allocate.c -> .os
 [    SHCC] libelf/libelf_ar.c -> .os
 [    SHCC] libelf/libelf_checksum.c -> .os
 [    SHCC] libelf/libelf_data.c -> .os
 [    SHCC] libelf/libelf_ehdr.c -> .os
 [    SHCC] libelf/libelf_extended.c -> .os
 [    SHCC] libelf/libelf_phdr.c -> .os
 [    SHCC] libelf/libelf_shdr.c -> .os
 [    SHCC] libelf/libelf_xlate.c -> .os
 [      M4] libelf/elf_types.m4, libelf_convert.m4 -> libelf_convert.c
 [      M4] libelf/elf_types.m4, libelf_fsize.m4 -> libelf_fsize.c
 [      M4] libelf/elf_types.m4, libelf_msize.m4 -> libelf_msize.c
 [   SHCXX] gzstream/gzstream.cc -> .os
 [    SHCC] libfdt/fdt.c -> .os
 [    SHCC] libelf/libelf_msize.c -> .os
 [    SHCC] libelf/libelf_fsize.c -> .os
 [    SHCC] libelf/libelf_convert.c -> .os
 [    SHCC] libfdt/fdt_ro.c -> .os
 [    SHCC] libfdt/fdt_rw.c -> .os
 [    SHCC] libfdt/fdt_sw.c -> .os
 [    SHCC] libfdt/fdt_wip.c -> .os
 [    SHCC] libfdt/fdt_empty_tree.c -> .os
 [    SHCC] libfdt/fdt_strerror.c -> .os
 [    SHCC] fputils/fp64.c -> .os
 [    SHCC] fputils/fp80.c -> .os
 [      AR]  -> libfdt/libfdt.a
 [   SHCXX] drampower/src/CommandAnalysis.cc -> .os
 [  RANLIB]  -> libfdt/libfdt.a
 [      AR]  -> gzstream/libgzstream.a
 [      AR]  -> fputils/libfputils.a
 [   SHCXX] drampower/src/MemArchitectureSpec.cc -> .os
 [  RANLIB]  -> fputils/libfputils.a
 [  RANLIB]  -> gzstream/libgzstream.a
 [   SHCXX] drampower/src/MemCommand.cc -> .os
 [   SHCXX] drampower/src/MemPowerSpec.cc -> .os
 [      AR]  -> libelf/libelf.a
 [  RANLIB]  -> libelf/libelf.a
 [   SHCXX] drampower/src/MemTimingSpec.cc -> .os
 [   SHCXX] drampower/src/MemoryPowerModel.cc -> .os
 [   SHCXX] drampower/src/MemorySpecification.cc -> .os
 [   SHCXX] drampower/src/Parameter.cc -> .os
 [   SHCXX] drampower/src/Parametrisable.cc -> .os
 [   SHCXX] drampower/src/libdrampower/LibDRAMPower.cc -> .os
 [      AR]  -> drampower/libdrampower.a
 [  RANLIB]  -> drampower/libdrampower.a
 [     CXX] X86_VI_hammer_GPU/base/date.cc -> .o
 [    LINK]  -> X86_VI_hammer_GPU/gem5.opt
scons: done building targets.
